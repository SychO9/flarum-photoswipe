{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@sycho/flarum-photoswipe/webpack/bootstrap","webpack://@sycho/flarum-photoswipe/webpack/runtime/compat get default export","webpack://@sycho/flarum-photoswipe/webpack/runtime/define property getters","webpack://@sycho/flarum-photoswipe/webpack/runtime/hasOwnProperty shorthand","webpack://@sycho/flarum-photoswipe/webpack/runtime/make namespace object","webpack://@sycho/flarum-photoswipe/external root \"flarum.core.compat['forum/app']\"","webpack://@sycho/flarum-photoswipe/external root \"flarum.core.compat['common/extend']\"","webpack://@sycho/flarum-photoswipe/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@sycho/flarum-photoswipe/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@sycho/flarum-photoswipe/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@sycho/flarum-photoswipe/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/util.js","webpack://@sycho/flarum-photoswipe/../../../src/js/core/eventable.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/placeholder.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/content.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/viewport-size.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/zoom-level.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/loader.js","webpack://@sycho/flarum-photoswipe/../../../src/js/core/base.js","webpack://@sycho/flarum-photoswipe/../../../src/js/lightbox/lightbox.js","webpack://@sycho/flarum-photoswipe/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@sycho/flarum-photoswipe/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/dom-events.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/pan-bounds.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/slide.js","webpack://@sycho/flarum-photoswipe/../../../src/js/gestures/drag-handler.js","webpack://@sycho/flarum-photoswipe/../../../src/js/gestures/zoom-handler.js","webpack://@sycho/flarum-photoswipe/../../../src/js/gestures/tap-handler.js","webpack://@sycho/flarum-photoswipe/../../../src/js/gestures/gestures.js","webpack://@sycho/flarum-photoswipe/../../../src/js/main-scroll.js","webpack://@sycho/flarum-photoswipe/../../../src/js/keyboard.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/css-animation.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/spring-easer.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/spring-animation.js","webpack://@sycho/flarum-photoswipe/../../../src/js/util/animations.js","webpack://@sycho/flarum-photoswipe/../../../src/js/scroll-wheel.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/ui-element.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/button-arrow.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/button-close.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/button-zoom.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/loading-indicator.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/counter-indicator.js","webpack://@sycho/flarum-photoswipe/../../../src/js/ui/ui.js","webpack://@sycho/flarum-photoswipe/../../../src/js/opener.js","webpack://@sycho/flarum-photoswipe/../../../src/js/photoswipe.js","webpack://@sycho/flarum-photoswipe/../../../src/js/slide/get-thumb-bounds.js","webpack://@sycho/flarum-photoswipe/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/** @typedef {undefined | null | false | '' | 0} Falsy */\r\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\r\n\r\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\r\nexport function createElement(className, tagName, appendToEl) {\r\n  const el = document.createElement(tagName || 'div');\r\n  if (className) {\r\n    el.className = className;\r\n  }\r\n  if (appendToEl) {\r\n    appendToEl.appendChild(el);\r\n  }\r\n  // @ts-expect-error\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function equalizePoints(p1, p2) {\r\n  p1.x = p2.x;\r\n  p1.y = p2.y;\r\n  if (p2.id !== undefined) {\r\n    p1.id = p2.id;\r\n  }\r\n  return p1;\r\n}\r\n\r\n/**\r\n * @param {Point} p\r\n */\r\nexport function roundPoint(p) {\r\n  p.x = Math.round(p.x);\r\n  p.y = Math.round(p.y);\r\n}\r\n\r\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function getDistanceBetween(p1, p2) {\r\n  const x = Math.abs(p1.x - p2.x);\r\n  const y = Math.abs(p1.y - p2.y);\r\n  return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * Whether X and Y positions of points are qual\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nexport function pointsEqual(p1, p2) {\r\n  return p1.x === p2.x && p1.y === p2.y;\r\n}\r\n\r\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n */\r\nexport function clamp(val, min, max) {\r\n  return Math.min(Math.max(val, min), max);\r\n}\r\n\r\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function toTransformString(x, y, scale) {\r\n  let propValue = 'translate3d('\r\n    + x + 'px,' + (y || 0) + 'px'\r\n    + ',0)';\r\n\r\n  if (scale !== undefined) {\r\n    propValue += ' scale3d('\r\n      + scale + ',' + scale\r\n      + ',1)';\r\n  }\r\n\r\n  return propValue;\r\n}\r\n\r\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\r\nexport function setTransform(el, x, y, scale) {\r\n  el.style.transform = toTransformString(x, y, scale);\r\n}\r\n\r\nconst defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string=} prop CSS property to animate\r\n * @param {number=} duration in ms\r\n * @param {string=} ease CSS easing function\r\n */\r\nexport function setTransitionStyle(el, prop, duration, ease) {\r\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\r\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\r\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\r\n  el.style.transition = prop\r\n    ? (prop + ' ' + duration + 'ms ' + (ease || defaultCSSEasing))\r\n    : 'none';\r\n}\r\n\r\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\r\nexport function setWidthHeight(el, w, h) {\r\n  el.style.width = (typeof w === 'number') ? (w + 'px') : w;\r\n  el.style.height = (typeof h === 'number') ? (h + 'px') : h;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nexport function removeTransitionStyle(el) {\r\n  setTransitionStyle(el);\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\r\nexport function decodeImage(img) {\r\n  if ('decode' in img) {\r\n    return img.decode();\r\n  }\r\n\r\n  if (img.complete) {\r\n    return Promise.resolve(img);\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n  });\r\n}\r\n\r\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\r\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\r\nexport const LOAD_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n  LOADED: 'loaded',\r\n  ERROR: 'error',\r\n};\r\n\r\n\r\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\r\nexport function specialKeyUsed(e) {\r\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {HTMLElement | NodeListOf<HTMLElement> | string} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\r\nexport function getElementsFromOption(option, legacySelector, parent = document) {\r\n  /** @type {HTMLElement[]} */\r\n  let elements = [];\r\n\r\n  if (option instanceof Element) {\r\n    elements = [option];\r\n  } else if (option instanceof NodeList || Array.isArray(option)) {\r\n    elements = Array.from(option);\r\n  } else {\r\n    const selector = typeof option === 'string' ? option : legacySelector;\r\n    if (selector) {\r\n      elements = Array.from(parent.querySelectorAll(selector));\r\n    }\r\n  }\r\n\r\n  return elements;\r\n}\r\n\r\n/**\r\n * Check if variable is PhotoSwipe class\r\n *\r\n * @param {any} fn\r\n */\r\nexport function isPswpClass(fn) {\r\n  return typeof fn === 'function'\r\n    && fn.prototype\r\n    && fn.prototype.goTo;\r\n}\r\n\r\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isSafari() {\r\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\r\n}\r\n\r\n","/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../slide/content.js').default} ContentDefault */\r\n/** @typedef {import('../slide/slide.js').default} Slide */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\r\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\r\n\r\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\r\n\r\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\r\n\r\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\r\nclass PhotoSwipeEvent {\r\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\r\n  constructor(type, details) {\r\n    this.type = type;\r\n    if (details) {\r\n      Object.assign(this, details);\r\n    }\r\n  }\r\n\r\n  preventDefault() {\r\n    this.defaultPrevented = true;\r\n  }\r\n}\r\n\r\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\r\nclass Eventable {\r\n  constructor() {\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\r\n    this._listeners = {};\r\n\r\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\r\n    this._filters = {};\r\n\r\n    /** @type {PhotoSwipe=} */\r\n    this.pswp = undefined;\r\n\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = undefined;\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\r\n  addFilter(name, fn, priority = 100) {\r\n    if (!this._filters[name]) {\r\n      this._filters[name] = [];\r\n    }\r\n\r\n    this._filters[name].push({ fn, priority });\r\n    this._filters[name].sort((f1, f2) => f1.priority - f2.priority);\r\n\r\n    if (this.pswp) {\r\n      this.pswp.addFilter(name, fn, priority);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   */\r\n  removeFilter(name, fn) {\r\n    if (this._filters[name]) {\r\n      // @ts-expect-error\r\n      this._filters[name] = this._filters[name].filter(filter => (filter.fn !== fn));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.removeFilter(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n   * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n   */\r\n  applyFilters(name, ...args) {\r\n    if (this._filters[name]) {\r\n      this._filters[name].forEach((filter) => {\r\n        // @ts-expect-error\r\n        args[0] = filter.fn.apply(this, args);\r\n      });\r\n    }\r\n    return args[0];\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  on(name, fn) {\r\n    if (!this._listeners[name]) {\r\n      this._listeners[name] = [];\r\n    }\r\n    this._listeners[name].push(fn);\r\n\r\n    // When binding events to lightbox,\r\n    // also bind events to PhotoSwipe Core,\r\n    // if it's open.\r\n    if (this.pswp) {\r\n      this.pswp.on(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {EventCallback<T>} fn\r\n   */\r\n  off(name, fn) {\r\n    if (this._listeners[name]) {\r\n      // @ts-expect-error\r\n      this._listeners[name] = this._listeners[name].filter(listener => (fn !== listener));\r\n    }\r\n\r\n    if (this.pswp) {\r\n      this.pswp.off(name, fn);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @template {keyof PhotoSwipeEventsMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   * @returns {AugmentedEvent<T>}\r\n   */\r\n  dispatch(name, details) {\r\n    if (this.pswp) {\r\n      return this.pswp.dispatch(name, details);\r\n    }\r\n\r\n    const event = /** @type {AugmentedEvent<T>} */ (new PhotoSwipeEvent(name, details));\r\n\r\n    if (!this._listeners) {\r\n      return event;\r\n    }\r\n\r\n    if (this._listeners[name]) {\r\n      this._listeners[name].forEach((listener) => {\r\n        listener.call(this, event);\r\n      });\r\n    }\r\n\r\n    return event;\r\n  }\r\n}\r\n\r\nexport default Eventable;\r\n","import { createElement, setWidthHeight, toTransformString } from '../util/util.js';\r\n\r\nclass Placeholder {\r\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\r\n  constructor(imageSrc, container) {\r\n    // Create placeholder\r\n    // (stretched thumbnail or simple div behind the main image)\r\n    this.element = createElement(\r\n      'pswp__img pswp__img--placeholder',\r\n      imageSrc ? 'img' : '',\r\n      container\r\n    );\r\n\r\n    if (imageSrc) {\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).decoding = 'async';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).alt = '';\r\n      /** @type {HTMLImageElement} */\r\n      (this.element).src = imageSrc;\r\n      this.element.setAttribute('role', 'presentation');\r\n    }\r\n\r\n    this.element.setAttribute('aria-hiden', 'true');\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.element.tagName === 'IMG') {\r\n      // Use transform scale() to modify img placeholder size\r\n      // (instead of changing width/height directly).\r\n      // This helps with performance, specifically in iOS15 Safari.\r\n      setWidthHeight(this.element, 250, 'auto');\r\n      this.element.style.transformOrigin = '0 0';\r\n      this.element.style.transform = toTransformString(0, 0, width / 250);\r\n    } else {\r\n      setWidthHeight(this.element, width, height);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n    this.element = null;\r\n  }\r\n}\r\n\r\nexport default Placeholder;\r\n","import { createElement, isSafari, LOAD_STATE, setWidthHeight } from '../util/util.js';\r\nimport Placeholder from './placeholder.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../util/util.js').LoadState} LoadState */\r\n\r\nclass Content {\r\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\r\n  constructor(itemData, instance, index) {\r\n    this.instance = instance;\r\n    this.data = itemData;\r\n    this.index = index;\r\n\r\n    /** @type {HTMLImageElement | HTMLDivElement} */\r\n    this.element = undefined;\r\n\r\n    this.displayedImageWidth = 0;\r\n    this.displayedImageHeight = 0;\r\n\r\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\r\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\r\n\r\n    this.isAttached = false;\r\n    this.hasSlide = false;\r\n    /** @type {LoadState} */\r\n    this.state = LOAD_STATE.IDLE;\r\n\r\n    if (this.data.type) {\r\n      this.type = this.data.type;\r\n    } else if (this.data.src) {\r\n      this.type = 'image';\r\n    } else {\r\n      this.type = 'html';\r\n    }\r\n\r\n    this.instance.dispatch('contentInit', { content: this });\r\n  }\r\n\r\n  removePlaceholder() {\r\n    if (this.placeholder && !this.keepPlaceholder()) {\r\n      // With delay, as image might be loaded, but not rendered\r\n      setTimeout(() => {\r\n        if (this.placeholder) {\r\n          this.placeholder.destroy();\r\n          this.placeholder = null;\r\n        }\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload content\r\n   *\r\n   * @param {boolean=} isLazy\r\n   * @param {boolean=} reload\r\n   */\r\n  load(isLazy, reload) {\r\n    if (this.slide && this.usePlaceholder()) {\r\n      if (!this.placeholder) {\r\n        const placeholderSrc = this.instance.applyFilters(\r\n          'placeholderSrc',\r\n          // use  image-based placeholder only for the first slide,\r\n          // as rendering (even small stretched thumbnail) is an expensive operation\r\n          (this.data.msrc && this.slide.isFirstSlide) ? this.data.msrc : false,\r\n          this\r\n        );\r\n        this.placeholder = new Placeholder(\r\n          placeholderSrc,\r\n          this.slide.container\r\n        );\r\n      } else {\r\n        const placeholderEl = this.placeholder.element;\r\n        // Add placeholder to DOM if it was already created\r\n        if (placeholderEl && !placeholderEl.parentElement) {\r\n          this.slide.container.prepend(placeholderEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.element && !reload) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentLoad', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.isImageContent()) {\r\n      this.element = createElement('pswp__img', 'img');\r\n      // Start loading only after width is defined, as sizes might depend on it.\r\n      // Due to Safari feature, we must define sizes before srcset.\r\n      if (this.displayedImageWidth) {\r\n        this.loadImage(isLazy);\r\n      }\r\n    } else {\r\n      this.element = createElement('pswp__content');\r\n      this.element.innerHTML = this.data.html || '';\r\n    }\r\n\r\n    if (reload && this.slide) {\r\n      this.slide.updateContentSize(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Preload image\r\n   *\r\n   * @param {boolean} isLazy\r\n   */\r\n  loadImage(isLazy) {\r\n    const imageElement = /** @type HTMLImageElement */ (this.element);\r\n\r\n    if (this.instance.dispatch('contentLoadImage', { content: this, isLazy }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.updateSrcsetSizes();\r\n\r\n    if (this.data.srcset) {\r\n      imageElement.srcset = this.data.srcset;\r\n    }\r\n\r\n    imageElement.src = this.data.src;\r\n\r\n    imageElement.alt = this.data.alt || '';\r\n\r\n    this.state = LOAD_STATE.LOADING;\r\n\r\n    if (imageElement.complete) {\r\n      this.onLoaded();\r\n    } else {\r\n      imageElement.onload = () => {\r\n        this.onLoaded();\r\n      };\r\n\r\n      imageElement.onerror = () => {\r\n        this.onError();\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Assign slide to content\r\n   *\r\n   * @param {Slide} slide\r\n   */\r\n  setSlide(slide) {\r\n    this.slide = slide;\r\n    this.hasSlide = true;\r\n    this.instance = slide.pswp;\r\n\r\n    // todo: do we need to unset slide?\r\n  }\r\n\r\n  /**\r\n   * Content load success handler\r\n   */\r\n  onLoaded() {\r\n    this.state = LOAD_STATE.LOADED;\r\n\r\n    if (this.slide) {\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, content: this });\r\n\r\n      // if content is reloaded\r\n      if (this.slide.isActive\r\n          && this.slide.heavyAppended\r\n          && !this.element.parentNode) {\r\n        this.append();\r\n        this.slide.updateContentSize(true);\r\n      }\r\n\r\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n        this.removePlaceholder();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Content load error handler\r\n   */\r\n  onError() {\r\n    this.state = LOAD_STATE.ERROR;\r\n\r\n    if (this.slide) {\r\n      this.displayError();\r\n      this.instance.dispatch('loadComplete', { slide: this.slide, isError: true, content: this });\r\n      this.instance.dispatch('loadError', { slide: this.slide, content: this });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean} If the content is currently loading\r\n   */\r\n  isLoading() {\r\n    return this.instance.applyFilters(\r\n      'isContentLoading',\r\n      this.state === LOAD_STATE.LOADING,\r\n      this\r\n    );\r\n  }\r\n\r\n  isError() {\r\n    return this.state === LOAD_STATE.ERROR;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content is image\r\n   */\r\n  isImageContent() {\r\n    return this.type === 'image';\r\n  }\r\n\r\n  /**\r\n   * Update content size\r\n   *\r\n   * @param {Number} width\r\n   * @param {Number} height\r\n   */\r\n  setDisplayedSize(width, height) {\r\n    if (!this.element) {\r\n      return;\r\n    }\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.setDisplayedSize(width, height);\r\n    }\r\n\r\n    // eslint-disable-next-line max-len\r\n    if (this.instance.dispatch('contentResize', { content: this, width, height }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    setWidthHeight(this.element, width, height);\r\n\r\n    if (this.isImageContent() && !this.isError()) {\r\n      const isInitialSizeUpdate = (!this.displayedImageWidth && width);\r\n\r\n      this.displayedImageWidth = width;\r\n      this.displayedImageHeight = height;\r\n\r\n      if (isInitialSizeUpdate) {\r\n        this.loadImage(false);\r\n      } else {\r\n        this.updateSrcsetSizes();\r\n      }\r\n\r\n      if (this.slide) {\r\n        // eslint-disable-next-line max-len\r\n        this.instance.dispatch('imageSizeChange', { slide: this.slide, width, height, content: this });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If the content can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.instance.applyFilters(\r\n      'isContentZoomable',\r\n      this.isImageContent() && (this.state !== LOAD_STATE.ERROR),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update image srcset sizes attribute based on width and height\r\n   */\r\n  updateSrcsetSizes() {\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    // Handle srcset sizes attribute.\r\n    //\r\n    // Never lower quality, if it was increased previously.\r\n    // Chrome does this automatically, Firefox and Safari do not,\r\n    // so we store largest used size in dataset.\r\n    if (this.data.srcset) {\r\n      const image = /** @type HTMLImageElement */ (this.element);\r\n      const sizesWidth = this.instance.applyFilters(\r\n        'srcsetSizesWidth',\r\n        this.displayedImageWidth,\r\n        this\r\n      );\r\n\r\n      if (!image.dataset.largestUsedSize\r\n          || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\r\n        image.sizes = sizesWidth + 'px';\r\n        image.dataset.largestUsedSize = String(sizesWidth);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n   */\r\n  usePlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'useContentPlaceholder',\r\n      this.isImageContent(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Preload content with lazy-loading param\r\n   */\r\n  lazyLoad() {\r\n    if (this.instance.dispatch('contentLazyLoad', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.load(true);\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean} If placeholder should be kept after content is loaded\r\n   */\r\n  keepPlaceholder() {\r\n    return this.instance.applyFilters(\r\n      'isKeepingPlaceholder',\r\n      this.isLoading(),\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Destroy the content\r\n   */\r\n  destroy() {\r\n    this.hasSlide = false;\r\n    this.slide = null;\r\n\r\n    if (this.instance.dispatch('contentDestroy', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.remove();\r\n\r\n    if (this.placeholder) {\r\n      this.placeholder.destroy();\r\n      this.placeholder = null;\r\n    }\r\n\r\n    if (this.isImageContent() && this.element) {\r\n      this.element.onload = null;\r\n      this.element.onerror = null;\r\n      this.element = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display error message\r\n   */\r\n  displayError() {\r\n    if (this.slide) {\r\n      /** @type {HTMLElement} */\r\n      let errorMsgEl = createElement('pswp__error-msg');\r\n      errorMsgEl.innerText = this.instance.options.errorMsg;\r\n      errorMsgEl = this.instance.applyFilters(\r\n        'contentErrorElement',\r\n        errorMsgEl,\r\n        this\r\n      );\r\n      this.element = createElement('pswp__content pswp__error-msg-container');\r\n      this.element.appendChild(errorMsgEl);\r\n      this.slide.container.innerText = '';\r\n      this.slide.container.appendChild(this.element);\r\n      this.slide.updateContentSize(true);\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the content\r\n   */\r\n  append() {\r\n    if (this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    this.isAttached = true;\r\n\r\n    if (this.state === LOAD_STATE.ERROR) {\r\n      this.displayError();\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppend', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const supportsDecode = ('decode' in this.element);\r\n\r\n    if (this.isImageContent()) {\r\n      // Use decode() on nearby slides\r\n      //\r\n      // Nearby slide images are in DOM and not hidden via display:none.\r\n      // However, they are placed offscreen (to the left and right side).\r\n      //\r\n      // Some browsers do not composite the image until it's actually visible,\r\n      // using decode() helps.\r\n      //\r\n      // You might ask \"why dont you just decode() and then append all images\",\r\n      // that's because I want to show image before it's fully loaded,\r\n      // as browser can render parts of image while it is loading.\r\n      // We do not do this in Safari due to partial loading bug.\r\n      if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\r\n        this.isDecoding = true;\r\n        // purposefully using finally instead of then,\r\n        // as if srcset sizes changes dynamically - it may cause decode error\r\n        /** @type {HTMLImageElement} */\r\n        (this.element).decode().finally(() => {\r\n          this.isDecoding = false;\r\n          this.appendImage();\r\n        });\r\n      } else {\r\n        this.appendImage();\r\n      }\r\n    } else if (this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the slide,\r\n   * active slide is generally the current one,\r\n   * meaning the user can see it.\r\n   */\r\n  activate() {\r\n    if (this.instance.dispatch('contentActivate', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.slide) {\r\n      if (this.isImageContent() && this.isDecoding && !isSafari()) {\r\n        // add image to slide when it becomes active,\r\n        // even if it's not finished decoding\r\n        this.appendImage();\r\n      } else if (this.isError()) {\r\n        this.load(false, true); // try to reload\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the content\r\n   */\r\n  deactivate() {\r\n    this.instance.dispatch('contentDeactivate', { content: this });\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove the content from DOM\r\n   */\r\n  remove() {\r\n    this.isAttached = false;\r\n\r\n    if (this.instance.dispatch('contentRemove', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this.element && this.element.parentNode) {\r\n      this.element.remove();\r\n    }\r\n\r\n    if (this.placeholder && this.placeholder.element) {\r\n      this.placeholder.element.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the image content to slide container\r\n   */\r\n  appendImage() {\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    if (this.instance.dispatch('contentAppendImage', { content: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    // ensure that element exists and is not already appended\r\n    if (this.slide && this.element && !this.element.parentNode) {\r\n      this.slide.container.appendChild(this.element);\r\n    }\r\n\r\n    if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\r\n      this.removePlaceholder();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\r\nexport function getViewportSize(options, pswp) {\r\n  if (options.getViewportSizeFn) {\r\n    const newViewportSize = options.getViewportSizeFn(options, pswp);\r\n    if (newViewportSize) {\r\n      return newViewportSize;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x: document.documentElement.clientWidth,\r\n\r\n    // TODO: height on mobile is very incosistent due to toolbar\r\n    // find a way to improve this\r\n    //\r\n    // document.documentElement.clientHeight - doesn't seem to work well\r\n    y: window.innerHeight\r\n  };\r\n}\r\n\r\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\r\nexport function parsePaddingOption(prop, options, viewportSize, itemData, index) {\r\n  /** @type {number} */\r\n  let paddingValue;\r\n\r\n  if (options.paddingFn) {\r\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\r\n  } else if (options.padding) {\r\n    paddingValue = options.padding[prop];\r\n  } else {\r\n    const legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1);\r\n    // @ts-expect-error\r\n    if (options[legacyPropName]) {\r\n      // @ts-expect-error\r\n      paddingValue = options[legacyPropName];\r\n    }\r\n  }\r\n\r\n  return paddingValue || 0;\r\n}\r\n\r\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\r\nexport function getPanAreaSize(options, viewportSize, itemData, index) {\r\n  return {\r\n    x: viewportSize.x\r\n      - parsePaddingOption('left', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('right', options, viewportSize, itemData, index),\r\n    y: viewportSize.y\r\n      - parsePaddingOption('top', options, viewportSize, itemData, index)\r\n      - parsePaddingOption('bottom', options, viewportSize, itemData, index)\r\n  };\r\n}\r\n","const MAX_IMAGE_WIDTH = 4000;\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\r\n\r\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\r\n\r\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\r\nclass ZoomLevel {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\r\n  constructor(options, itemData, index, pswp) {\r\n    this.pswp = pswp;\r\n    this.options = options;\r\n    this.itemData = itemData;\r\n    this.index = index;\r\n  }\r\n\r\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\r\n  update(maxWidth, maxHeight, panAreaSize) {\r\n    this.elementSize = {\r\n      x: maxWidth,\r\n      y: maxHeight\r\n    };\r\n\r\n    this.panAreaSize = panAreaSize;\r\n\r\n    const hRatio = this.panAreaSize.x / this.elementSize.x;\r\n    const vRatio = this.panAreaSize.y / this.elementSize.y;\r\n\r\n    this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\r\n    this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio);\r\n\r\n    // zoom.vFill defines zoom level of the image\r\n    // when it has 100% of viewport vertical space (height)\r\n    this.vFill = Math.min(1, vRatio);\r\n\r\n    this.initial = this._getInitial();\r\n    this.secondary = this._getSecondary();\r\n    this.max = Math.max(\r\n      this.initial,\r\n      this.secondary,\r\n      this._getMax()\r\n    );\r\n\r\n    this.min = Math.min(\r\n      this.fit,\r\n      this.initial,\r\n      this.secondary\r\n    );\r\n\r\n    if (this.pswp) {\r\n      this.pswp.dispatch('zoomLevelsUpdate', { zoomLevels: this, slideData: this.itemData });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses user-defined zoom option.\r\n   *\r\n   * @private\r\n   * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n   */\r\n  _parseZoomLevelOption(optionPrefix) {\r\n    // eslint-disable-next-line max-len\r\n    const optionName = /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */ (optionPrefix + 'ZoomLevel');\r\n    const optionValue = this.options[optionName];\r\n\r\n    if (!optionValue) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      return optionValue(this);\r\n    }\r\n\r\n    if (optionValue === 'fill') {\r\n      return this.fill;\r\n    }\r\n\r\n    if (optionValue === 'fit') {\r\n      return this.fit;\r\n    }\r\n\r\n    return Number(optionValue);\r\n  }\r\n\r\n  /**\r\n   * Get zoom level to which image will be zoomed after double-tap gesture,\r\n   * or when user clicks on zoom icon,\r\n   * or mouse-click on image itself.\r\n   * If you return 1 image will be zoomed to its original size.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getSecondary() {\r\n    let currZoomLevel = this._parseZoomLevelOption('secondary');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // 3x of \"fit\" state, but not larger than original\r\n    currZoomLevel = Math.min(1, this.fit * 3);\r\n\r\n    if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\r\n      currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\r\n    }\r\n\r\n    return currZoomLevel;\r\n  }\r\n\r\n  /**\r\n   * Get initial image zoom level.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getInitial() {\r\n    return this._parseZoomLevelOption('initial') || this.fit;\r\n  }\r\n\r\n  /**\r\n   * Maximum zoom level when user zooms\r\n   * via zoom/pinch gesture,\r\n   * via cmd/ctrl-wheel or via trackpad.\r\n   *\r\n   * @private\r\n   * @return {number}\r\n   */\r\n  _getMax() {\r\n    const currZoomLevel = this._parseZoomLevelOption('max');\r\n\r\n    if (currZoomLevel) {\r\n      return currZoomLevel;\r\n    }\r\n\r\n    // max zoom level is x4 from \"fit state\",\r\n    // used for zoom gesture and ctrl/trackpad zoom\r\n    return Math.max(1, this.fit * 4);\r\n  }\r\n}\r\n\r\nexport default ZoomLevel;\r\n","import { getViewportSize, getPanAreaSize } from '../util/viewport-size.js';\r\nimport ZoomLevel from './zoom-level.js';\r\n\r\n/** @typedef {import('./content.js').default} Content */\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\r\n\r\nconst MIN_SLIDES_TO_CACHE = 5;\r\n\r\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox | PhotoSwipeBase} instance PhotoSwipe instance\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\r\nexport function lazyLoadData(itemData, instance, index) {\r\n  // src/slide/content/content.js\r\n  const content = instance.createContentFromData(itemData, index);\r\n\r\n  if (!content || !content.lazyLoad) {\r\n    return;\r\n  }\r\n\r\n  const { options } = instance;\r\n\r\n  // We need to know dimensions of the image to preload it,\r\n  // as it might use srcset and we need to define sizes\r\n  // @ts-expect-error should provide pswp instance?\r\n  const viewportSize = instance.viewportSize || getViewportSize(options, instance);\r\n  const panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\r\n\r\n  const zoomLevel = new ZoomLevel(options, itemData, -1);\r\n  zoomLevel.update(content.width, content.height, panAreaSize);\r\n\r\n  content.lazyLoad();\r\n  content.setDisplayedSize(\r\n    Math.ceil(content.width * zoomLevel.initial),\r\n    Math.ceil(content.height * zoomLevel.initial)\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\n\r\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\r\nexport function lazyLoadSlide(index, instance) {\r\n  const itemData = instance.getItemData(index);\r\n\r\n  if (instance.dispatch('lazyLoadSlide', { index, itemData }).defaultPrevented) {\r\n    return;\r\n  }\r\n\r\n  return lazyLoadData(itemData, instance, index);\r\n}\r\n\r\n\r\nclass ContentLoader {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    // Total amount of cached images\r\n    this.limit = Math.max(\r\n      pswp.options.preload[0] + pswp.options.preload[1] + 1,\r\n      MIN_SLIDES_TO_CACHE\r\n    );\r\n    /** @type {Content[]} */\r\n    this._cachedItems = [];\r\n  }\r\n\r\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number=} diff Difference between slide indexes that was changed recently, or 0.\r\n   */\r\n  updateLazy(diff) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('lazyLoad').defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const { preload } = pswp.options;\r\n    const isForward = diff === undefined ? true : (diff >= 0);\r\n    let i;\r\n\r\n    // preload[1] - num items to preload in forward direction\r\n    for (i = 0; i <= preload[1]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? i : (-i)));\r\n    }\r\n\r\n    // preload[0] - num items to preload in backward direction\r\n    for (i = 1; i <= preload[0]; i++) {\r\n      this.loadSlideByIndex(pswp.currIndex + (isForward ? (-i) : i));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  loadSlideByIndex(index) {\r\n    index = this.pswp.getLoopedIndex(index);\r\n    // try to get cached content\r\n    let content = this.getContentByIndex(index);\r\n    if (!content) {\r\n      // no cached content, so try to load from scratch:\r\n      content = lazyLoadSlide(index, this.pswp);\r\n      // if content can be loaded, add it to cache:\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  getContentBySlide(slide) {\r\n    let content = this.getContentByIndex(slide.index);\r\n    if (!content) {\r\n      // create content if not found in cache\r\n      content = this.pswp.createContentFromData(slide.data, slide.index);\r\n      if (content) {\r\n        this.addToCache(content);\r\n      }\r\n    }\r\n\r\n    if (content) {\r\n      // assign slide to content\r\n      content.setSlide(slide);\r\n    }\r\n    return content;\r\n  }\r\n\r\n  /**\r\n   * @param {Content} content\r\n   */\r\n  addToCache(content) {\r\n    // move to the end of array\r\n    this.removeByIndex(content.index);\r\n    this._cachedItems.push(content);\r\n\r\n    if (this._cachedItems.length > this.limit) {\r\n      // Destroy the first content that's not attached\r\n      const indexToRemove = this._cachedItems.findIndex((item) => {\r\n        return !item.isAttached && !item.hasSlide;\r\n      });\r\n      if (indexToRemove !== -1) {\r\n        const removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\r\n        removedItem.destroy();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an image from cache, does not destroy() it, just removes.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  removeByIndex(index) {\r\n    const indexToRemove = this._cachedItems.findIndex(item => item.index === index);\r\n    if (indexToRemove !== -1) {\r\n      this._cachedItems.splice(indexToRemove, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} index\r\n   */\r\n  getContentByIndex(index) {\r\n    return this._cachedItems.find(content => content.index === index);\r\n  }\r\n\r\n  destroy() {\r\n    this._cachedItems.forEach(content => content.destroy());\r\n    this._cachedItems = null;\r\n  }\r\n}\r\n\r\nexport default ContentLoader;\r\n","import Eventable from './eventable.js';\r\nimport {\r\n  getElementsFromOption\r\n} from '../util/util.js';\r\nimport Content from '../slide/content.js';\r\nimport { lazyLoadData } from '../slide/loader.js';\r\n\r\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\r\n/** @typedef {import(\"../photoswipe.js\").PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\r\n\r\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\r\nclass PhotoSwipeBase extends Eventable {\r\n  /**\r\n   * Get total number of slides\r\n   *\r\n   * @returns {number}\r\n   */\r\n  getNumItems() {\r\n    let numItems;\r\n    const { dataSource } = this.options;\r\n    if (!dataSource) {\r\n      numItems = 0;\r\n    } else if ('length' in dataSource) {\r\n      // may be an array or just object with length property\r\n      numItems = dataSource.length;\r\n    } else if ('gallery' in dataSource) {\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      if (dataSource.items) {\r\n        numItems = dataSource.items.length;\r\n      }\r\n    }\r\n\r\n    // legacy event, before filters were introduced\r\n    const event = this.dispatch('numItems', {\r\n      dataSource,\r\n      numItems\r\n    });\r\n    return this.applyFilters('numItems', event.numItems, dataSource);\r\n  }\r\n\r\n  /**\r\n   * @param {SlideData} slideData\r\n   * @param {number} index\r\n   */\r\n  createContentFromData(slideData, index) {\r\n    // @ts-expect-error\r\n    return new Content(slideData, this, index);\r\n  }\r\n\r\n  /**\r\n   * Get item data by index.\r\n   *\r\n   * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n   * For example, it may contain properties like\r\n   * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getItemData(index) {\r\n    const { dataSource } = this.options;\r\n    let dataSourceItem;\r\n    if (Array.isArray(dataSource)) {\r\n      // Datasource is an array of elements\r\n      dataSourceItem = dataSource[index];\r\n    } else if (dataSource && dataSource.gallery) {\r\n      // dataSource has gallery property,\r\n      // thus it was created by Lightbox, based on\r\n      // gallery and children options\r\n\r\n      // query DOM elements\r\n      if (!dataSource.items) {\r\n        dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\r\n      }\r\n\r\n      dataSourceItem = dataSource.items[index];\r\n    }\r\n\r\n    let itemData = dataSourceItem;\r\n\r\n    if (itemData instanceof Element) {\r\n      itemData = this._domElementToItemData(itemData);\r\n    }\r\n\r\n    // Dispatching the itemData event,\r\n    // it's a legacy verion before filters were introduced\r\n    const event = this.dispatch('itemData', {\r\n      itemData: itemData || {},\r\n      index\r\n    });\r\n\r\n    return this.applyFilters('itemData', event.itemData, index);\r\n  }\r\n\r\n  /**\r\n   * Get array of gallery DOM elements,\r\n   * based on childSelector and gallery element.\r\n   *\r\n   * @param {HTMLElement} galleryElement\r\n   */\r\n  _getGalleryDOMElements(galleryElement) {\r\n    if (this.options.children || this.options.childSelector) {\r\n      return getElementsFromOption(\r\n        this.options.children,\r\n        this.options.childSelector,\r\n        galleryElement\r\n      ) || [];\r\n    }\r\n\r\n    return [galleryElement];\r\n  }\r\n\r\n  /**\r\n   * Converts DOM element to item data object.\r\n   *\r\n   * @param {HTMLElement} element DOM element\r\n   */\r\n  // eslint-disable-next-line class-methods-use-this\r\n  _domElementToItemData(element) {\r\n    /** @type {SlideData} */\r\n    const itemData = {\r\n      element\r\n    };\r\n\r\n    // eslint-disable-next-line max-len\r\n    const linkEl = /** @type {HTMLAnchorElement} */ (element.tagName === 'A' ? element : element.querySelector('a'));\r\n\r\n    if (linkEl) {\r\n      // src comes from data-pswp-src attribute,\r\n      // if it's empty link href is used\r\n      itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\r\n\r\n      if (linkEl.dataset.pswpSrcset) {\r\n        itemData.srcset = linkEl.dataset.pswpSrcset;\r\n      }\r\n\r\n      itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\r\n      itemData.height = parseInt(linkEl.dataset.pswpHeight, 10);\r\n\r\n      // support legacy w & h properties\r\n      itemData.w = itemData.width;\r\n      itemData.h = itemData.height;\r\n\r\n      if (linkEl.dataset.pswpType) {\r\n        itemData.type = linkEl.dataset.pswpType;\r\n      }\r\n\r\n      const thumbnailEl = element.querySelector('img');\r\n\r\n      if (thumbnailEl) {\r\n        // msrc is URL to placeholder image that's displayed before large image is loaded\r\n        // by default it's displayed only for the first slide\r\n        itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\r\n        itemData.alt = thumbnailEl.getAttribute('alt');\r\n      }\r\n\r\n      if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\r\n        itemData.thumbCropped = true;\r\n      }\r\n    }\r\n\r\n    return this.applyFilters('domItemData', itemData, element, linkEl);\r\n  }\r\n\r\n  /**\r\n   * Lazy-load by slide data\r\n   *\r\n   * @param {SlideData} itemData Data about the slide\r\n   * @param {number} index\r\n   * @returns Image that is being decoded or false.\r\n   */\r\n  lazyLoadData(itemData, index) {\r\n    return lazyLoadData(itemData, this, index);\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeBase;\r\n","import {\r\n  specialKeyUsed,\r\n  getElementsFromOption,\r\n  isPswpClass\r\n} from '../util/util.js';\r\n\r\nimport PhotoSwipeBase from '../core/base.js';\r\nimport { lazyLoadSlide } from '../slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\r\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\r\n/** @typedef {import('../slide/content.js').default} Content */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('../core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n\r\n/**\r\n * PhotoSwipe Lightbox\r\n *\r\n * - If user has unsupported browser it falls back to default browser action (just opens URL)\r\n * - Binds click event to links that should open PhotoSwipe\r\n * - parses DOM strcture for PhotoSwipe (retrieves large image URLs and sizes)\r\n * - Initializes PhotoSwipe\r\n *\r\n *\r\n * Loader options use the same object as PhotoSwipe, and supports such options:\r\n *\r\n * gallery - Element | Element[] | NodeList | string selector for the gallery element\r\n * children - Element | Element[] | NodeList | string selector for the gallery children\r\n *\r\n */\r\nclass PhotoSwipeLightbox extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n    /** @type {PhotoSwipeOptions} */\r\n    this.options = options || {};\r\n    this._uid = 0;\r\n  }\r\n\r\n  /**\r\n   * Initialize lightbox, should be called only once.\r\n   * It's not included in the main constructor, so you may bind events before it.\r\n   */\r\n  init() {\r\n    this.onThumbnailsClick = this.onThumbnailsClick.bind(this);\r\n\r\n    // Bind click events to each gallery\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.addEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} e\r\n   */\r\n  onThumbnailsClick(e) {\r\n    // Exit and allow default browser action if:\r\n    if (specialKeyUsed(e) // ... if clicked with a special key (ctrl/cmd...)\r\n        || window.pswp // ... if PhotoSwipe is already open\r\n        || window.navigator.onLine === false) { // ... if offline\r\n      return;\r\n    }\r\n\r\n    // If both clientX and clientY are 0 or not defined,\r\n    // the event is likely triggered by keyboard,\r\n    // so we do not pass the initialPoint\r\n    //\r\n    // Note that some screen readers emulate the mouse position,\r\n    // so it's not ideal way to detect them.\r\n    //\r\n    let initialPoint = { x: e.clientX, y: e.clientY };\r\n\r\n    if (!initialPoint.x && !initialPoint.y) {\r\n      initialPoint = null;\r\n    }\r\n\r\n    let clickedIndex = this.getClickedIndex(e);\r\n    clickedIndex = this.applyFilters('clickedIndex', clickedIndex, e, this);\r\n    const dataSource = {\r\n      gallery: /** @type {HTMLElement} */ (e.currentTarget)\r\n    };\r\n\r\n    if (clickedIndex >= 0) {\r\n      e.preventDefault();\r\n      this.loadAndOpen(clickedIndex, dataSource, initialPoint);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get index of gallery item that was clicked.\r\n   *\r\n   * @param {MouseEvent} e click event\r\n   */\r\n  getClickedIndex(e) {\r\n    // legacy option\r\n    if (this.options.getClickedIndexFn) {\r\n      return this.options.getClickedIndexFn.call(this, e);\r\n    }\r\n\r\n    const clickedTarget = /** @type {HTMLElement} */ (e.target);\r\n    const childElements = getElementsFromOption(\r\n      this.options.children,\r\n      this.options.childSelector,\r\n      /** @type {HTMLElement} */ (e.currentTarget)\r\n    );\r\n    const clickedChildIndex = childElements.findIndex(\r\n      child => child === clickedTarget || child.contains(clickedTarget)\r\n    );\r\n\r\n    if (clickedChildIndex !== -1) {\r\n      return clickedChildIndex;\r\n    } else if (this.options.children || this.options.childSelector) {\r\n      // click wasn't on a child element\r\n      return -1;\r\n    }\r\n\r\n    // There is only one item (which is the gallery)\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Load and open PhotoSwipe\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   * @param {{ x?: number; y?: number }} [initialPoint]\r\n   */\r\n  loadAndOpen(index, dataSource, initialPoint) {\r\n    // Check if the gallery is already open\r\n    if (window.pswp) {\r\n      return false;\r\n    }\r\n\r\n    // set initial index\r\n    this.options.index = index;\r\n\r\n    // define options for PhotoSwipe constructor\r\n    this.options.initialPointerPos = initialPoint;\r\n\r\n    this.shouldOpen = true;\r\n    this.preload(index, dataSource);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Load the main module and the slide content by index\r\n   *\r\n   * @param {number} index\r\n   * @param {DataSource=} dataSource\r\n   */\r\n  preload(index, dataSource) {\r\n    const { options } = this;\r\n\r\n    if (dataSource) {\r\n      options.dataSource = dataSource;\r\n    }\r\n\r\n    // Add the main module\r\n    /** @type {Promise<Type<PhotoSwipe>>[]} */\r\n    const promiseArray = [];\r\n\r\n    const pswpModuleType = typeof options.pswpModule;\r\n    if (isPswpClass(options.pswpModule)) {\r\n      promiseArray.push(Promise.resolve(/** @type {Type<PhotoSwipe>} */ (options.pswpModule)));\r\n    } else if (pswpModuleType === 'string') {\r\n      throw new Error('pswpModule as string is no longer supported');\r\n    } else if (pswpModuleType === 'function') {\r\n      promiseArray.push(/** @type {() => Promise<Type<PhotoSwipe>>} */ (options.pswpModule)());\r\n    } else {\r\n      throw new Error('pswpModule is not valid');\r\n    }\r\n\r\n    // Add custom-defined promise, if any\r\n    if (typeof options.openPromise === 'function') {\r\n      // allow developers to perform some task before opening\r\n      promiseArray.push(options.openPromise());\r\n    }\r\n\r\n    if (options.preloadFirstSlide !== false && index >= 0) {\r\n      this._preloadedContent = lazyLoadSlide(index, this);\r\n    }\r\n\r\n    // Wait till all promises resolve and open PhotoSwipe\r\n    const uid = ++this._uid;\r\n    Promise.all(promiseArray).then((iterableModules) => {\r\n      if (this.shouldOpen) {\r\n        const mainModule = iterableModules[0];\r\n        this._openPhotoswipe(mainModule, uid);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} module\r\n   * @param {number} uid\r\n   */\r\n  _openPhotoswipe(module, uid) {\r\n    // Cancel opening if UID doesn't match the current one\r\n    // (if user clicked on another gallery item before current was loaded).\r\n    //\r\n    // Or if shouldOpen flag is set to false\r\n    // (developer may modify it via public API)\r\n    if (uid !== this._uid && this.shouldOpen) {\r\n      return;\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n\r\n    // PhotoSwipe is already open\r\n    if (window.pswp) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Pass data to PhotoSwipe and open init\r\n     *\r\n     * @type {PhotoSwipe}\r\n     */\r\n    const pswp = typeof module === 'object'\r\n        ? new module.default(this.options) // eslint-disable-line\r\n        : new module(this.options); // eslint-disable-line\r\n\r\n    this.pswp = pswp;\r\n    window.pswp = pswp;\r\n\r\n    // map listeners from Lightbox to PhotoSwipe Core\r\n    /** @type {(keyof PhotoSwipeEventsMap)[]} */\r\n    (Object.keys(this._listeners)).forEach((name) => {\r\n      this._listeners[name].forEach((fn) => {\r\n        pswp.on(name, /** @type {EventCallback<typeof name>} */(fn));\r\n      });\r\n    });\r\n\r\n    // same with filters\r\n    /** @type {(keyof PhotoSwipeFiltersMap)[]} */\r\n    (Object.keys(this._filters)).forEach((name) => {\r\n      this._filters[name].forEach((filter) => {\r\n        pswp.addFilter(name, filter.fn, filter.priority);\r\n      });\r\n    });\r\n\r\n    if (this._preloadedContent) {\r\n      pswp.contentLoader.addToCache(this._preloadedContent);\r\n      this._preloadedContent = null;\r\n    }\r\n\r\n    pswp.on('destroy', () => {\r\n      // clean up public variables\r\n      this.pswp = null;\r\n      window.pswp = null;\r\n    });\r\n\r\n    pswp.init();\r\n  }\r\n\r\n  /**\r\n   * Unbinds all events, closes PhotoSwipe if it's open.\r\n   */\r\n  destroy() {\r\n    if (this.pswp) {\r\n      this.pswp.destroy();\r\n    }\r\n\r\n    this.shouldOpen = false;\r\n    this._listeners = null;\r\n\r\n    getElementsFromOption(this.options.gallery, this.options.gallerySelector)\r\n      .forEach((galleryElement) => {\r\n        galleryElement.removeEventListener('click', this.onThumbnailsClick, false);\r\n      });\r\n  }\r\n}\r\n\r\nexport default PhotoSwipeLightbox;\r\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","// Detect passive event listener support\r\nlet supportsPassive = false;\r\n/* eslint-disable */\r\ntry {\r\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n    get: () => {\r\n      supportsPassive = true;\r\n    }\r\n  }));\r\n} catch (e) {}\r\n/* eslint-enable */\r\n\r\n\r\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document} target\r\n * @prop {string} type\r\n * @prop {(e: any) => void} listener\r\n * @prop {boolean} passive\r\n */\r\n\r\nclass DOMEvents {\r\n  constructor() {\r\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {HTMLElement | Window | Document} target\r\n   * @param {string} type Can be multiple, separated by space.\r\n   * @param {(e: any) => void} listener\r\n   * @param {boolean=} passive\r\n   */\r\n  add(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive);\r\n  }\r\n\r\n  /**\r\n   * Removes event listeners\r\n   *\r\n   * @param {HTMLElement | Window | Document} target\r\n   * @param {string} type\r\n   * @param {(e: any) => void} listener\r\n   * @param {boolean=} passive\r\n   */\r\n  remove(target, type, listener, passive) {\r\n    this._toggleListener(target, type, listener, passive, true);\r\n  }\r\n\r\n  /**\r\n   * Removes all bound events\r\n   */\r\n  removeAll() {\r\n    this._pool.forEach((poolItem) => {\r\n      this._toggleListener(\r\n        poolItem.target,\r\n        poolItem.type,\r\n        poolItem.listener,\r\n        poolItem.passive,\r\n        true,\r\n        true\r\n      );\r\n    });\r\n    this._pool = [];\r\n  }\r\n\r\n  /**\r\n   * Adds or removes event\r\n   *\r\n   * @param {HTMLElement | Window | Document} target\r\n   * @param {string} type\r\n   * @param {(e: any) => void} listener\r\n   * @param {boolean} passive\r\n   * @param {boolean=} unbind Whether the event should be added or removed\r\n   * @param {boolean=} skipPool Whether events pool should be skipped\r\n   */\r\n  _toggleListener(target, type, listener, passive, unbind, skipPool) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    const methodName = unbind ? 'removeEventListener' : 'addEventListener';\r\n    const types = type.split(' ');\r\n    types.forEach((eType) => {\r\n      if (eType) {\r\n        // Events pool is used to easily unbind all events when PhotoSwipe is closed,\r\n        // so developer doesn't need to do this manually\r\n        if (!skipPool) {\r\n          if (unbind) {\r\n            // Remove from the events pool\r\n            this._pool = this._pool.filter((poolItem) => {\r\n              return poolItem.type !== eType\r\n                || poolItem.listener !== listener\r\n                || poolItem.target !== target;\r\n            });\r\n          } else {\r\n            // Add to the events pool\r\n            this._pool.push({\r\n              target,\r\n              type: eType,\r\n              listener,\r\n              passive\r\n            });\r\n          }\r\n        }\r\n\r\n\r\n        // most PhotoSwipe events call preventDefault,\r\n        // and we do not need browser to scroll the page\r\n        const eventOptions = supportsPassive ? { passive: (passive || false) } : false;\r\n\r\n        target[methodName](\r\n          eType,\r\n          listener,\r\n          eventOptions\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DOMEvents;\r\n","import {\r\n  clamp\r\n} from '../util/util.js';\r\nimport { parsePaddingOption } from '../util/viewport-size.js';\r\n\r\n/** @typedef {import('./slide.js').default} Slide */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n/** @typedef {'x' | 'y'} Axis */\r\n\r\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\r\nclass PanBounds {\r\n  /**\r\n   * @param {Slide} slide\r\n   */\r\n  constructor(slide) {\r\n    this.slide = slide;\r\n\r\n    this.currZoomLevel = 1;\r\n\r\n    /** @type {Point} */\r\n    this.center = {};\r\n    /** @type {Point} */\r\n    this.max = {};\r\n    /** @type {Point} */\r\n    this.min = {};\r\n\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  update(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n\r\n    if (!this.slide.width) {\r\n      this.reset();\r\n    } else {\r\n      this._updateAxis('x');\r\n      this._updateAxis('y');\r\n      this.slide.pswp.dispatch('calcBounds', { slide: this.slide });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * _calculateItemBoundsForAxis\r\n   *\r\n   * @param {Axis} axis\r\n   */\r\n  _updateAxis(axis) {\r\n    const { pswp } = this.slide;\r\n    const elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\r\n    const paddingProp = axis === 'x' ? 'left' : 'top';\r\n    const padding = parsePaddingOption(\r\n      paddingProp,\r\n      pswp.options,\r\n      pswp.viewportSize,\r\n      this.slide.data,\r\n      this.slide.index\r\n    );\r\n\r\n    const panAreaSize = this.slide.panAreaSize[axis];\r\n\r\n    // Default position of element.\r\n    // By defaul it is center of viewport:\r\n    this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding;\r\n\r\n    // maximum pan position\r\n    this.max[axis] = (elSize > panAreaSize)\r\n      ? Math.round(panAreaSize - elSize) + padding\r\n      : this.center[axis];\r\n\r\n    // minimum pan position\r\n    this.min[axis] = (elSize > panAreaSize)\r\n      ? padding\r\n      : this.center[axis];\r\n  }\r\n\r\n  // _getZeroBounds\r\n  reset() {\r\n    this.center.x = 0;\r\n    this.center.y = 0;\r\n    this.max.x = 0;\r\n    this.max.y = 0;\r\n    this.min.x = 0;\r\n    this.min.y = 0;\r\n  }\r\n\r\n  /**\r\n   * Correct pan position if it's beyond the bounds\r\n   *\r\n   * @param {Axis} axis x or y\r\n   * @param {number} panOffset\r\n   */\r\n  correctPan(axis, panOffset) { // checkPanBounds\r\n    return clamp(panOffset, this.max[axis], this.min[axis]);\r\n  }\r\n}\r\n\r\nexport default PanBounds;\r\n","/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n/**\r\n * @typedef {_SlideData & Record<string, any>} SlideData\r\n * @typedef {Object} _SlideData\r\n * @prop {HTMLElement=} element thumbnail element\r\n * @prop {string=} src image URL\r\n * @prop {string=} srcset image srcset\r\n * @prop {number=} w image width (deprecated)\r\n * @prop {number=} h image height (deprecated)\r\n * @prop {number=} width image width\r\n * @prop {number=} height image height\r\n * @prop {string=} msrc placeholder image URL that's displayed before large image is loaded\r\n * @prop {string=} alt image alt text\r\n * @prop {boolean=} thumbCropped whether thumbnail is cropped client-side or not\r\n * @prop {string=} html html content of a slide\r\n * @prop {'image' | 'html' | string} [type] slide type\r\n */\r\n\r\nimport {\r\n  createElement,\r\n  setTransform,\r\n  equalizePoints,\r\n  roundPoint,\r\n  toTransformString,\r\n  clamp,\r\n} from '../util/util.js';\r\n\r\nimport PanBounds from './pan-bounds.js';\r\nimport ZoomLevel from './zoom-level.js';\r\nimport { getPanAreaSize } from '../util/viewport-size.js';\r\n\r\n/**\r\n * Renders and allows to control a single slide\r\n */\r\nclass Slide {\r\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(data, index, pswp) {\r\n    this.data = data;\r\n    this.index = index;\r\n    this.pswp = pswp;\r\n    this.isActive = (index === pswp.currIndex);\r\n    this.currentResolution = 0;\r\n    /** @type {Point} */\r\n    this.panAreaSize = {};\r\n\r\n    this.isFirstSlide = (this.isActive && !pswp.opener.isOpen);\r\n\r\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\r\n\r\n    this.pswp.dispatch('gettingData', {\r\n      slide: this,\r\n      data: this.data,\r\n      index\r\n    });\r\n\r\n    this.pan = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n\r\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\r\n    this.container = createElement('pswp__zoom-wrap');\r\n\r\n    this.currZoomLevel = 1;\r\n    /** @type {number} */\r\n    this.width = this.content.width;\r\n    /** @type {number} */\r\n    this.height = this.content.height;\r\n\r\n    this.bounds = new PanBounds(this);\r\n\r\n    this.prevDisplayedWidth = -1;\r\n    this.prevDisplayedHeight = -1;\r\n\r\n    this.pswp.dispatch('slideInit', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\r\n  setIsActive(isActive) {\r\n    if (isActive && !this.isActive) {\r\n      // slide just became active\r\n      this.activate();\r\n    } else if (!isActive && this.isActive) {\r\n      // slide just became non-active\r\n      this.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Appends slide content to DOM\r\n   *\r\n   * @param {HTMLElement} holderElement\r\n   */\r\n  append(holderElement) {\r\n    this.holderElement = holderElement;\r\n\r\n    this.container.style.transformOrigin = '0 0';\r\n\r\n    // Slide appended to DOM\r\n    if (!this.data) {\r\n      return;\r\n    }\r\n\r\n    this.calculateSize();\r\n\r\n    this.load();\r\n    this.updateContentSize();\r\n    this.appendHeavy();\r\n\r\n    this.holderElement.appendChild(this.container);\r\n\r\n    this.zoomAndPanToInitial();\r\n\r\n    this.pswp.dispatch('firstZoomPan', { slide: this });\r\n\r\n    this.applyCurrentZoomPan();\r\n\r\n    this.pswp.dispatch('afterSetContent', { slide: this });\r\n\r\n    if (this.isActive) {\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  load() {\r\n    this.content.load();\r\n    this.pswp.dispatch('slideLoad', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Append \"heavy\" DOM elements\r\n   *\r\n   * This may depend on a type of slide,\r\n   * but generally these are large images.\r\n   */\r\n  appendHeavy() {\r\n    const { pswp } = this;\r\n    const appendHeavyNearby = true; // todo\r\n\r\n    // Avoid appending heavy elements during animations\r\n    if (this.heavyAppended\r\n        || !pswp.opener.isOpen\r\n        || pswp.mainScroll.isShifted()\r\n        || (!this.isActive && !appendHeavyNearby)) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('appendHeavy', { slide: this }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    this.heavyAppended = true;\r\n\r\n    this.content.append();\r\n\r\n    this.pswp.dispatch('appendHeavyContent', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide is active (selected).\r\n   *\r\n   * If it's part of opening/closing transition -\r\n   * activate() will trigger after the transition is ended.\r\n   */\r\n  activate() {\r\n    this.isActive = true;\r\n    this.appendHeavy();\r\n    this.content.activate();\r\n    this.pswp.dispatch('slideActivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Triggered when this slide becomes inactive.\r\n   *\r\n   * Slide can become inactive only after it was active.\r\n   */\r\n  deactivate() {\r\n    this.isActive = false;\r\n    this.content.deactivate();\r\n\r\n    if (this.currZoomLevel !== this.zoomLevels.initial) {\r\n      // allow filtering\r\n      this.calculateSize();\r\n    }\r\n\r\n    // reset zoom level\r\n    this.currentResolution = 0;\r\n    this.zoomAndPanToInitial();\r\n    this.applyCurrentZoomPan();\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('slideDeactivate', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * The slide should destroy itself, it will never be used again.\r\n   * (unbind all events and destroy internal components)\r\n   */\r\n  destroy() {\r\n    this.content.hasSlide = false;\r\n    this.content.remove();\r\n    this.container.remove();\r\n    this.pswp.dispatch('slideDestroy', { slide: this });\r\n  }\r\n\r\n  resize() {\r\n    if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\r\n      // Keep initial zoom level if it was before the resize,\r\n      // as well as when this slide is not active\r\n\r\n      // Reset position and scale to original state\r\n      this.calculateSize();\r\n      this.currentResolution = 0;\r\n      this.zoomAndPanToInitial();\r\n      this.applyCurrentZoomPan();\r\n      this.updateContentSize();\r\n    } else {\r\n      // readjust pan position if it's beyond the bounds\r\n      this.calculateSize();\r\n      this.bounds.update(this.currZoomLevel);\r\n      this.panTo(this.pan.x, this.pan.y);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Apply size to current slide content,\r\n   * based on the current resolution and scale.\r\n   *\r\n   * @param {boolean=} force if size should be updated even if dimensions weren't changed\r\n   */\r\n  updateContentSize(force) {\r\n    // Use initial zoom level\r\n    // if resolution is not defined (user didn't zoom yet)\r\n    const scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\r\n\r\n    if (!scaleMultiplier) {\r\n      return;\r\n    }\r\n\r\n    const width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\r\n    const height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\r\n\r\n    if (!this.sizeChanged(width, height) && !force) {\r\n      return;\r\n    }\r\n    this.content.setDisplayedSize(width, height);\r\n  }\r\n\r\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\r\n  sizeChanged(width, height) {\r\n    if (width !== this.prevDisplayedWidth\r\n        || height !== this.prevDisplayedHeight) {\r\n      this.prevDisplayedWidth = width;\r\n      this.prevDisplayedHeight = height;\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  getPlaceholderElement() {\r\n    if (this.content.placeholder) {\r\n      return this.content.placeholder.element;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zoom current slide image to...\r\n   *\r\n   * @param {number} destZoomLevel Destination zoom level.\r\n   * @param {{ x?: number; y?: number }} centerPoint\r\n   * Transform origin center point, or false if viewport center should be used.\r\n   * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n   * @param {boolean=} ignoreBounds Minimum and maximum zoom levels will be ignored.\r\n   * @return {boolean=} Returns true if animated.\r\n   */\r\n  zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\r\n    const { pswp } = this;\r\n    if (!this.isZoomable()\r\n        || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    pswp.dispatch('beforeZoomTo', {\r\n      destZoomLevel, centerPoint, transitionDuration\r\n    });\r\n\r\n    // stop all pan and zoom transitions\r\n    pswp.animations.stopAllPan();\r\n\r\n    // if (!centerPoint) {\r\n    //   centerPoint = pswp.getViewportCenterPoint();\r\n    // }\r\n\r\n    const prevZoomLevel = this.currZoomLevel;\r\n\r\n    if (!ignoreBounds) {\r\n      destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\r\n    }\r\n\r\n    // if (transitionDuration === undefined) {\r\n    //   transitionDuration = this.pswp.options.zoomAnimationDuration;\r\n    // }\r\n\r\n    this.setZoomLevel(destZoomLevel);\r\n    this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\r\n    this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\r\n    roundPoint(this.pan);\r\n\r\n    const finishTransition = () => {\r\n      this._setResolution(destZoomLevel);\r\n      this.applyCurrentZoomPan();\r\n    };\r\n\r\n    if (!transitionDuration) {\r\n      finishTransition();\r\n    } else {\r\n      pswp.animations.startTransition({\r\n        isPan: true,\r\n        name: 'zoomTo',\r\n        target: this.container,\r\n        transform: this.getCurrentTransform(),\r\n        onComplete: finishTransition,\r\n        duration: transitionDuration,\r\n        easing: pswp.options.easing\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {{ x?: number, y?: number }} [centerPoint]\r\n   */\r\n  toggleZoom(centerPoint) {\r\n    this.zoomTo(\r\n      this.currZoomLevel === this.zoomLevels.initial\r\n        ? this.zoomLevels.secondary : this.zoomLevels.initial,\r\n      centerPoint,\r\n      this.pswp.options.zoomAnimationDuration\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Updates zoom level property and recalculates new pan bounds,\r\n   * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\r\n  setZoomLevel(currZoomLevel) {\r\n    this.currZoomLevel = currZoomLevel;\r\n    this.bounds.update(this.currZoomLevel);\r\n  }\r\n\r\n  /**\r\n   * Get pan position after zoom at a given `point`.\r\n   *\r\n   * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n   * pan bounds according to the new zoom level.\r\n   *\r\n   * @param {'x' | 'y'} axis\r\n   * @param {{ x?: number; y?: number }} [point]\r\n   * point based on which zoom is performed, usually refers to the current mouse position,\r\n   * if false - viewport center will be used.\r\n   * @param {number=} prevZoomLevel Zoom level before new zoom was applied.\r\n   */\r\n  calculateZoomToPanOffset(axis, point, prevZoomLevel) {\r\n    const totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\r\n    if (totalPanDistance === 0) {\r\n      return this.bounds.center[axis];\r\n    }\r\n\r\n    if (!point) {\r\n      point = this.pswp.getViewportCenterPoint();\r\n    }\r\n\r\n    const zoomFactor = this.currZoomLevel / prevZoomLevel;\r\n    return this.bounds.correctPan(\r\n      axis,\r\n      (this.pan[axis] - point[axis]) * zoomFactor + point[axis]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Apply pan and keep it within bounds.\r\n   *\r\n   * @param {number} panX\r\n   * @param {number} panY\r\n   */\r\n  panTo(panX, panY) {\r\n    this.pan.x = this.bounds.correctPan('x', panX);\r\n    this.pan.y = this.bounds.correctPan('y', panY);\r\n    this.applyCurrentZoomPan();\r\n  }\r\n\r\n  /**\r\n   * If the slide in the current state can be panned by the user\r\n   */\r\n  isPannable() {\r\n    return this.width && (this.currZoomLevel > this.zoomLevels.fit);\r\n  }\r\n\r\n  /**\r\n   * If the slide can be zoomed\r\n   */\r\n  isZoomable() {\r\n    return this.width && this.content.isZoomable();\r\n  }\r\n\r\n  /**\r\n   * Apply transform and scale based on\r\n   * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n   */\r\n  applyCurrentZoomPan() {\r\n    this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\r\n    if (this === this.pswp.currSlide) {\r\n      this.pswp.dispatch('zoomPanUpdate', { slide: this });\r\n    }\r\n  }\r\n\r\n  zoomAndPanToInitial() {\r\n    this.currZoomLevel = this.zoomLevels.initial;\r\n\r\n    // pan according to the zoom level\r\n    this.bounds.update(this.currZoomLevel);\r\n    equalizePoints(this.pan, this.bounds.center);\r\n    this.pswp.dispatch('initialZoomPan', { slide: this });\r\n  }\r\n\r\n  /**\r\n   * Set translate and scale based on current resolution\r\n   *\r\n   * @param {number} x\r\n   * @param {number} y\r\n   * @param {number} zoom\r\n   */\r\n  _applyZoomTransform(x, y, zoom) {\r\n    zoom /= this.currentResolution || this.zoomLevels.initial;\r\n    setTransform(this.container, x, y, zoom);\r\n  }\r\n\r\n  calculateSize() {\r\n    const { pswp } = this;\r\n\r\n    equalizePoints(\r\n      this.panAreaSize,\r\n      getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index)\r\n    );\r\n\r\n    this.zoomLevels.update(this.width, this.height, this.panAreaSize);\r\n\r\n    pswp.dispatch('calcSlideSize', {\r\n      slide: this\r\n    });\r\n  }\r\n\r\n  getCurrentTransform() {\r\n    const scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\r\n    return toTransformString(this.pan.x, this.pan.y, scale);\r\n  }\r\n\r\n  /**\r\n   * Set resolution and re-render the image.\r\n   *\r\n   * For example, if the real image size is 2000x1500,\r\n   * and resolution is 0.5 - it will be rendered as 1000x750.\r\n   *\r\n   * Image with zoom level 2 and resolution 0.5 is\r\n   * the same as image with zoom level 1 and resolution 1.\r\n   *\r\n   * Used to optimize animations and make\r\n   * sure that browser renders image in highest quality.\r\n   * Also used by responsive images to load the correct one.\r\n   *\r\n   * @param {number} newResolution\r\n   */\r\n  _setResolution(newResolution) {\r\n    if (newResolution === this.currentResolution) {\r\n      return;\r\n    }\r\n\r\n    this.currentResolution = newResolution;\r\n    this.updateContentSize();\r\n\r\n    this.pswp.dispatch('resolutionChanged');\r\n  }\r\n}\r\n\r\nexport default Slide;\r\n","import {\r\n  equalizePoints, roundPoint, clamp\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst PAN_END_FRICTION = 0.35;\r\nconst VERTICAL_DRAG_FRICTION = 0.6;\r\n\r\n// 1 corresponds to the third of viewport height\r\nconst MIN_RATIO_TO_CLOSE = 0.4;\r\n\r\n// Minimum speed required to navigate\r\n// to next or previous slide\r\nconst MIN_NEXT_SLIDE_SPEED = 0.5;\r\n\r\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n */\r\nfunction project(initialVelocity, decelerationRate) {\r\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\r\n}\r\n\r\n/**\r\n * Handles single pointer dragging\r\n */\r\nclass DragHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = gestures.pswp;\r\n    /** @type {Point} */\r\n    this.startPan = {};\r\n  }\r\n\r\n  start() {\r\n    equalizePoints(this.startPan, this.pswp.currSlide.pan);\r\n    this.pswp.animations.stopAll();\r\n  }\r\n\r\n  change() {\r\n    const { p1, prevP1, dragAxis, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n\r\n    if (dragAxis === 'y'\r\n        && pswp.options.closeOnVerticalDrag\r\n        && currSlide.currZoomLevel <= currSlide.zoomLevels.fit\r\n        && !this.gestures.isMultitouch) {\r\n      // Handle vertical drag to close\r\n      const panY = currSlide.pan.y + (p1.y - prevP1.y);\r\n      if (!pswp.dispatch('verticalDrag', { panY }).defaultPrevented) {\r\n        this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\r\n        const bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\r\n        pswp.applyBgOpacity(bgOpacity);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      const mainScrollChanged = this._panOrMoveMainScroll('x');\r\n      if (!mainScrollChanged) {\r\n        this._panOrMoveMainScroll('y');\r\n\r\n        roundPoint(currSlide.pan);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    }\r\n  }\r\n\r\n  end() {\r\n    const { pswp, velocity } = this.gestures;\r\n    const { mainScroll } = pswp;\r\n    let indexDiff = 0;\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Handle main scroll if it's shifted\r\n    if (mainScroll.isShifted()) {\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX();\r\n\r\n      // Ratio between 0 and 1:\r\n      // 0 - slide is not visible at all,\r\n      // 0.5 - half of the slide is vicible\r\n      // 1 - slide is fully visible\r\n      const currentSlideVisibilityRatio = (mainScrollShiftDiff / pswp.viewportSize.x);\r\n\r\n      // Go next slide.\r\n      //\r\n      // - if velocity and its direction is matched\r\n      //   and we see at least tiny part of the next slide\r\n      //\r\n      // - or if we see less than 50% of the current slide\r\n      //   and velocity is close to 0\r\n      //\r\n      if ((velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0)\r\n          || (velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5)) {\r\n        // Go to next slide\r\n        indexDiff = 1;\r\n        velocity.x = Math.min(velocity.x, 0);\r\n      } else if ((velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0)\r\n          || (velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5)) {\r\n        // Go to prev slide\r\n        indexDiff = -1;\r\n        velocity.x = Math.max(velocity.x, 0);\r\n      }\r\n\r\n      mainScroll.moveIndexBy(indexDiff, true, velocity.x);\r\n    }\r\n\r\n    // Restore zoom level\r\n    if (pswp.currSlide.currZoomLevel > pswp.currSlide.zoomLevels.max\r\n        || this.gestures.isMultitouch) {\r\n      this.gestures.zoomLevels.correctZoomPan(true);\r\n    } else {\r\n      // we run two animations instead of one,\r\n      // as each axis has own pan boundaries and thus different spring function\r\n      // (correctZoomPan does not have this functionality,\r\n      //  it animates all properties with single timing function)\r\n      this._finishPanGestureForAxis('x');\r\n      this._finishPanGestureForAxis('y');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _finishPanGestureForAxis(axis) {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n    const { velocity } = this.gestures;\r\n    const { pan, bounds } = currSlide;\r\n    const panPos = pan[axis];\r\n    const restoreBgOpacity = (pswp.bgOpacity < 1 && axis === 'y');\r\n\r\n    // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\r\n    // Inceasing this number will reduce travel distance\r\n    const decelerationRate = 0.995; // 0.99\r\n\r\n    // Pan position if there is no bounds\r\n    const projectedPosition = panPos + project(velocity[axis], decelerationRate);\r\n\r\n    if (restoreBgOpacity) {\r\n      const vDragRatio = this._getVerticalDragRatio(panPos);\r\n      const projectedVDragRatio = this._getVerticalDragRatio(projectedPosition);\r\n\r\n      // If we are above and moving upwards,\r\n      // or if we are below and moving downwards\r\n      if ((vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE)\r\n          || (vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE)) {\r\n        pswp.close();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Pan position with corrected bounds\r\n    const correctedPanPosition = bounds.correctPan(axis, projectedPosition);\r\n\r\n    // Exit if pan position should not be changed\r\n    // or if speed it too low\r\n    if (panPos === correctedPanPosition) {\r\n      return;\r\n    }\r\n\r\n    // Overshoot if the final position is out of pan bounds\r\n    const dampingRatio = (correctedPanPosition === projectedPosition) ? 1 : 0.82;\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const totalPanDist = correctedPanPosition - panPos;\r\n\r\n    pswp.animations.startSpring({\r\n      name: 'panGesture' + axis,\r\n      isPan: true,\r\n      start: panPos,\r\n      end: correctedPanPosition,\r\n      velocity: velocity[axis],\r\n      dampingRatio,\r\n      onUpdate: (pos) => {\r\n        // Animate opacity of background relative to Y pan position of an image\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // 0 - start of animation, 1 - end of animation\r\n          const animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist;\r\n\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio,\r\n            0,\r\n            1\r\n          ));\r\n        }\r\n\r\n        pan[axis] = Math.floor(pos);\r\n        currSlide.applyCurrentZoomPan();\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update position of the main scroll,\r\n   * or/and update pan position of the current slide.\r\n   *\r\n   * Should return true if it changes (or can change) main scroll.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   */\r\n  _panOrMoveMainScroll(axis) {\r\n    const { p1, pswp, dragAxis, prevP1, isMultitouch } = this.gestures;\r\n    const { currSlide, mainScroll } = pswp;\r\n    const delta = (p1[axis] - prevP1[axis]);\r\n    const newMainScrollX = mainScroll.x + delta;\r\n\r\n    if (!delta) {\r\n      return;\r\n    }\r\n\r\n    // Always move main scroll if image can not be panned\r\n    if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\r\n      mainScroll.moveTo(newMainScrollX, true);\r\n      return true; // changed main scroll\r\n    }\r\n\r\n    const { bounds } = currSlide;\r\n    const newPan = currSlide.pan[axis] + delta;\r\n\r\n    if (pswp.options.allowPanToNext\r\n        && dragAxis === 'x'\r\n        && axis === 'x'\r\n        && !isMultitouch) {\r\n      const currSlideMainScrollX = mainScroll.getCurrSlideX();\r\n\r\n      // Position of the main scroll relative to the viewport\r\n      const mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\r\n\r\n      const isLeftToRight = delta > 0;\r\n      const isRightToLeft = !isLeftToRight;\r\n\r\n      if (newPan > bounds.min[axis] && isLeftToRight) {\r\n        // Panning from left to right, beyond the left edge\r\n\r\n        // Wether the image was at minimum pan position (or less)\r\n        // when this drag gesture started.\r\n        // Minimum pan position refers to the left edge of the image.\r\n        const wasAtMinPanPosition = (bounds.min[axis] <= this.startPan[axis]);\r\n\r\n        if (wasAtMinPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else if (newPan < bounds.max[axis] && isRightToLeft) {\r\n        // Paning from right to left, beyond the right edge\r\n\r\n        // Maximum pan position refers to the right edge of the image.\r\n        const wasAtMaxPanPosition = (this.startPan[axis] <= bounds.max[axis]);\r\n\r\n        if (wasAtMaxPanPosition) {\r\n          mainScroll.moveTo(newMainScrollX, true);\r\n          return true;\r\n        } else {\r\n          this._setPanWithFriction(axis, newPan);\r\n          //currSlide.pan[axis] = newPan;\r\n        }\r\n      } else {\r\n        // If main scroll is shifted\r\n        if (mainScrollShiftDiff !== 0) {\r\n          // If main scroll is shifted right\r\n          if (mainScrollShiftDiff > 0 /*&& isRightToLeft*/) {\r\n            mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          } else if (mainScrollShiftDiff < 0 /*&& isLeftToRight*/) {\r\n            // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\r\n            mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\r\n            return true;\r\n          }\r\n        } else {\r\n          // We are within pan bounds, so just pan\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      }\r\n    } else {\r\n      if (axis === 'y') {\r\n        // Do not pan vertically if main scroll is shifted o\r\n        if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\r\n          this._setPanWithFriction(axis, newPan);\r\n        }\r\n      } else {\r\n        this._setPanWithFriction(axis, newPan);\r\n      }\r\n    }\r\n  }\r\n  //\r\n  // If we move above - the ratio is negative\r\n  // If we move below the ratio is positive\r\n\r\n  /**\r\n   * Relation between pan Y position and third of viewport height.\r\n   *\r\n   * When we are at initial position (center bounds) - the ratio is 0,\r\n   * if position is shifted upwards - the ratio is negative,\r\n   * if position is shifted downwards - the ratio is positive.\r\n   *\r\n   * @private\r\n   * @param {number} panY The current pan Y position.\r\n   */\r\n  _getVerticalDragRatio(panY) {\r\n    return (panY - this.pswp.currSlide.bounds.center.y)\r\n            / (this.pswp.viewportSize.y / 3);\r\n  }\r\n\r\n  /**\r\n   * Set pan position of the current slide.\r\n   * Apply friction if the position is beyond the pan bounds,\r\n   * or if custom friction is defined.\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} potentialPan\r\n   * @param {number=} customFriction (0.1 - 1)\r\n   */\r\n  _setPanWithFriction(axis, potentialPan, customFriction) {\r\n    const { pan, bounds } = this.pswp.currSlide;\r\n    const correctedPan = bounds.correctPan(axis, potentialPan);\r\n    // If we are out of pan bounds\r\n    if (correctedPan !== potentialPan || customFriction) {\r\n      const delta = Math.round(potentialPan - pan[axis]);\r\n      pan[axis] += delta * (customFriction || PAN_END_FRICTION);\r\n    } else {\r\n      pan[axis] = potentialPan;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragHandler;\r\n","import {\r\n  equalizePoints, getDistanceBetween, clamp, pointsEqual\r\n} from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\nconst UPPER_ZOOM_FRICTION = 0.05;\r\nconst LOWER_ZOOM_FRICTION = 0.15;\r\n\r\n\r\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\r\nfunction getZoomPointsCenter(p, p1, p2) {\r\n  p.x = (p1.x + p2.x) / 2;\r\n  p.y = (p1.y + p2.y) / 2;\r\n  return p;\r\n}\r\n\r\nclass ZoomHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n    this.pswp = this.gestures.pswp;\r\n    /** @type {Point} */\r\n    this._startPan = {};\r\n\r\n    /** @type {Point} */\r\n    this._startZoomPoint = {};\r\n    /** @type {Point} */\r\n    this._zoomPoint = {};\r\n  }\r\n\r\n  start() {\r\n    this._startZoomLevel = this.pswp.currSlide.currZoomLevel;\r\n    equalizePoints(this._startPan, this.pswp.currSlide.pan);\r\n    this.pswp.animations.stopAllPan();\r\n    this._wasOverFitZoomLevel = false;\r\n  }\r\n\r\n  change() {\r\n    const { p1, startP1, p2, startP2, pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const minZoomLevel = currSlide.zoomLevels.min;\r\n    const maxZoomLevel = currSlide.zoomLevels.max;\r\n\r\n    if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\r\n      return;\r\n    }\r\n\r\n    getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\r\n    getZoomPointsCenter(this._zoomPoint, p1, p2);\r\n\r\n    let currZoomLevel = (1 / getDistanceBetween(startP1, startP2))\r\n                      * getDistanceBetween(p1, p2)\r\n                      * this._startZoomLevel;\r\n\r\n    // slightly over the zoom.fit\r\n    if (currZoomLevel > currSlide.zoomLevels.initial + (currSlide.zoomLevels.initial / 15)) {\r\n      this._wasOverFitZoomLevel = true;\r\n    }\r\n\r\n    if (currZoomLevel < minZoomLevel) {\r\n      if (pswp.options.pinchToClose\r\n          && !this._wasOverFitZoomLevel\r\n          && this._startZoomLevel <= currSlide.zoomLevels.initial) {\r\n        // fade out background if zooming out\r\n        const bgOpacity = 1 - ((minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2));\r\n        if (!pswp.dispatch('pinchClose', { bgOpacity }).defaultPrevented) {\r\n          pswp.applyBgOpacity(bgOpacity);\r\n        }\r\n      } else {\r\n        // Apply the friction if zoom level is below the min\r\n        currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\r\n      }\r\n    } else if (currZoomLevel > maxZoomLevel) {\r\n      // Apply the friction if zoom level is above the max\r\n      currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\r\n    }\r\n\r\n    currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\r\n    currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\r\n\r\n    currSlide.setZoomLevel(currZoomLevel);\r\n    currSlide.applyCurrentZoomPan();\r\n  }\r\n\r\n  end() {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n    if (currSlide.currZoomLevel < currSlide.zoomLevels.initial\r\n        && !this._wasOverFitZoomLevel\r\n        && pswp.options.pinchToClose) {\r\n      pswp.close();\r\n    } else {\r\n      this.correctZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} currZoomLevel\r\n   */\r\n  _calculatePanForZoomLevel(axis, currZoomLevel) {\r\n    const zoomFactor = currZoomLevel / this._startZoomLevel;\r\n    return this._zoomPoint[axis]\r\n            - ((this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor);\r\n  }\r\n\r\n  /**\r\n   * Correct currZoomLevel and pan if they are\r\n   * beyond minimum or maximum values.\r\n   * With animation.\r\n   *\r\n   * @param {boolean=} ignoreGesture\r\n   * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n   */\r\n  correctZoomPan(ignoreGesture) {\r\n    const { pswp } = this;\r\n    const { currSlide } = pswp;\r\n\r\n    if (!currSlide.isZoomable()) {\r\n      return;\r\n    }\r\n\r\n    if (this._zoomPoint.x === undefined) {\r\n      ignoreGesture = true;\r\n    }\r\n\r\n    const prevZoomLevel = currSlide.currZoomLevel;\r\n\r\n    /** @type {number} */\r\n    let destinationZoomLevel;\r\n    let currZoomLevelNeedsChange = true;\r\n\r\n    if (prevZoomLevel < currSlide.zoomLevels.initial) {\r\n      destinationZoomLevel = currSlide.zoomLevels.initial;\r\n      // zoom to min\r\n    } else if (prevZoomLevel > currSlide.zoomLevels.max) {\r\n      destinationZoomLevel = currSlide.zoomLevels.max;\r\n      // zoom to max\r\n    } else {\r\n      currZoomLevelNeedsChange = false;\r\n      destinationZoomLevel = prevZoomLevel;\r\n    }\r\n\r\n    const initialBgOpacity = pswp.bgOpacity;\r\n    const restoreBgOpacity = pswp.bgOpacity < 1;\r\n\r\n    const initialPan = equalizePoints({}, currSlide.pan);\r\n    let destinationPan = equalizePoints({}, initialPan);\r\n\r\n    if (ignoreGesture) {\r\n      this._zoomPoint.x = 0;\r\n      this._zoomPoint.y = 0;\r\n      this._startZoomPoint.x = 0;\r\n      this._startZoomPoint.y = 0;\r\n      this._startZoomLevel = prevZoomLevel;\r\n      equalizePoints(this._startPan, initialPan);\r\n    }\r\n\r\n    if (currZoomLevelNeedsChange) {\r\n      destinationPan = {\r\n        x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\r\n        y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\r\n      };\r\n    }\r\n\r\n    // set zoom level, so pan bounds are updated according to it\r\n    currSlide.setZoomLevel(destinationZoomLevel);\r\n\r\n    destinationPan = {\r\n      x: currSlide.bounds.correctPan('x', destinationPan.x),\r\n      y: currSlide.bounds.correctPan('y', destinationPan.y)\r\n    };\r\n\r\n    // return zoom level and its bounds to initial\r\n    currSlide.setZoomLevel(prevZoomLevel);\r\n\r\n    let panNeedsChange = true;\r\n    if (pointsEqual(destinationPan, initialPan)) {\r\n      panNeedsChange = false;\r\n    }\r\n\r\n    if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\r\n      // update resolution after gesture\r\n      currSlide._setResolution(destinationZoomLevel);\r\n      currSlide.applyCurrentZoomPan();\r\n\r\n      // nothing to animate\r\n      return;\r\n    }\r\n\r\n    pswp.animations.stopAllPan();\r\n\r\n    pswp.animations.startSpring({\r\n      isPan: true,\r\n      start: 0,\r\n      end: 1000,\r\n      velocity: 0,\r\n      dampingRatio: 1,\r\n      naturalFrequency: 40,\r\n      onUpdate: (now) => {\r\n        now /= 1000; // 0 - start, 1 - end\r\n\r\n        if (panNeedsChange || currZoomLevelNeedsChange) {\r\n          if (panNeedsChange) {\r\n            currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\r\n            currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\r\n          }\r\n\r\n          if (currZoomLevelNeedsChange) {\r\n            const newZoomLevel = prevZoomLevel\r\n                        + (destinationZoomLevel - prevZoomLevel) * now;\r\n            currSlide.setZoomLevel(newZoomLevel);\r\n          }\r\n\r\n          currSlide.applyCurrentZoomPan();\r\n        }\r\n\r\n        // Restore background opacity\r\n        if (restoreBgOpacity && pswp.bgOpacity < 1) {\r\n          // We clamp opacity to keep it between 0 and 1.\r\n          // As progress ratio can be larger than 1 due to overshoot,\r\n          // and we do not want to bounce opacity.\r\n          pswp.applyBgOpacity(clamp(\r\n            initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1\r\n          ));\r\n        }\r\n      },\r\n      onComplete: () => {\r\n        // update resolution after transition ends\r\n        currSlide._setResolution(destinationZoomLevel);\r\n        currSlide.applyCurrentZoomPan();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default ZoomHandler;\r\n","/**\r\n * @template T\r\n * @template P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\r\n\r\n/** @typedef {import('./gestures.js').default} Gestures */\r\n\r\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\r\n/** @typedef {{ x?: number; y?: number }} Point */\r\n\r\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n */\r\nfunction didTapOnMainContent(event) {\r\n  return !!(/** @type {HTMLElement} */ (event.target).closest('.pswp__container'));\r\n}\r\n\r\n/**\r\n * Tap, double-tap handler.\r\n */\r\nclass TapHandler {\r\n  /**\r\n   * @param {Gestures} gestures\r\n   */\r\n  constructor(gestures) {\r\n    this.gestures = gestures;\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  click(point, originalEvent) {\r\n    const targetClassList = /** @type {HTMLElement} */ (originalEvent.target).classList;\r\n    const isImageClick = targetClassList.contains('pswp__img');\r\n    const isBackgroundClick = targetClassList.contains('pswp__item')\r\n                              || targetClassList.contains('pswp__zoom-wrap');\r\n\r\n    if (isImageClick) {\r\n      this._doClickOrTapAction('imageClick', point, originalEvent);\r\n    } else if (isBackgroundClick) {\r\n      this._doClickOrTapAction('bgClick', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  tap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('tap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  doubleTap(point, originalEvent) {\r\n    if (didTapOnMainContent(originalEvent)) {\r\n      this._doClickOrTapAction('doubleTap', point, originalEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Actions} actionName\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\r\n  _doClickOrTapAction(actionName, point, originalEvent) {\r\n    const { pswp } = this.gestures;\r\n    const { currSlide } = pswp;\r\n    const actionFullName = /** @type {AddPostfix<Actions, 'Action'>} */ (actionName + 'Action');\r\n    const optionValue = pswp.options[actionFullName];\r\n\r\n    if (pswp.dispatch(actionFullName, { point, originalEvent }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (typeof optionValue === 'function') {\r\n      optionValue.call(pswp, point, originalEvent);\r\n      return;\r\n    }\r\n\r\n    switch (optionValue) {\r\n      case 'close':\r\n      case 'next':\r\n        pswp[optionValue]();\r\n        break;\r\n      case 'zoom':\r\n        currSlide.toggleZoom(point);\r\n        break;\r\n      case 'zoom-or-close':\r\n        // by default click zooms current image,\r\n        // if it can not be zoomed - gallery will be closed\r\n        if (currSlide.isZoomable()\r\n            && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\r\n          currSlide.toggleZoom(point);\r\n        } else if (pswp.options.clickToCloseNonZoomable) {\r\n          pswp.close();\r\n        }\r\n        break;\r\n      case 'toggle-controls':\r\n        this.gestures.pswp.element.classList.toggle('pswp--ui-visible');\r\n        // if (_controlsVisible) {\r\n        //   _ui.hideControls();\r\n        // } else {\r\n        //   _ui.showControls();\r\n        // }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TapHandler;\r\n","import {\r\n  equalizePoints, pointsEqual, getDistanceBetween\r\n} from '../util/util.js';\r\n\r\nimport DragHandler from './drag-handler.js';\r\nimport ZoomHandler from './zoom-handler.js';\r\nimport TapHandler from './tap-handler.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('../photoswipe.js').Point} Point */\r\n\r\n// How far should user should drag\r\n// until we can determine that the gesture is swipe and its direction\r\nconst AXIS_SWIPE_HYSTERISIS = 10;\r\n//const PAN_END_FRICTION = 0.35;\r\n\r\nconst DOUBLE_TAP_DELAY = 300; // ms\r\nconst MIN_TAP_DISTANCE = 25; // px\r\n\r\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\r\nclass Gestures {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {'x' | 'y'} */\r\n    this.dragAxis = undefined;\r\n\r\n    // point objects are defined once and reused\r\n    // PhotoSwipe keeps track only of two pointers, others are ignored\r\n    /** @type {Point} */\r\n    this.p1 = {}; // the first pressed pointer\r\n    /** @type {Point} */\r\n    this.p2 = {}; // the second pressed pointer\r\n    /** @type {Point} */\r\n    this.prevP1 = {};\r\n    /** @type {Point} */\r\n    this.prevP2 = {};\r\n    /** @type {Point} */\r\n    this.startP1 = {};\r\n    /** @type {Point} */\r\n    this.startP2 = {};\r\n    /** @type {Point} */\r\n    this.velocity = {};\r\n\r\n    /** @type {Point} */\r\n    this._lastStartP1 = {};\r\n    /** @type {Point} */\r\n    this._intervalP1 = {};\r\n    this._numActivePoints = 0;\r\n    /** @type {Point[]} */\r\n    this._ongoingPointers = [];\r\n\r\n    this._touchEventEnabled = 'ontouchstart' in window;\r\n    this._pointerEventEnabled = !!(window.PointerEvent);\r\n    this.supportsTouch = this._touchEventEnabled\r\n                          || (this._pointerEventEnabled && navigator.maxTouchPoints > 1);\r\n\r\n    if (!this.supportsTouch) {\r\n      // disable pan to next slide for non-touch devices\r\n      pswp.options.allowPanToNext = false;\r\n    }\r\n\r\n    this.drag = new DragHandler(this);\r\n    this.zoomLevels = new ZoomHandler(this);\r\n    this.tapHandler = new TapHandler(this);\r\n\r\n    pswp.on('bindEvents', () => {\r\n      pswp.events.add(pswp.scrollWrap, 'click', e => this._onClick(e));\r\n\r\n      if (this._pointerEventEnabled) {\r\n        this._bindEvents('pointer', 'down', 'up', 'cancel');\r\n      } else if (this._touchEventEnabled) {\r\n        this._bindEvents('touch', 'start', 'end', 'cancel');\r\n\r\n        // In previous versions we also bound mouse event here,\r\n        // in case device supports both touch and mouse events,\r\n        // but newer versions of browsers now support PointerEvent.\r\n\r\n        // on iOS10 if you bind touchmove/end after touchstart,\r\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\r\n        // preventDefault will have no effect on touchmove and touchend.\r\n        // Unless you bind it previously.\r\n        pswp.scrollWrap.ontouchmove = () => {}; // eslint-disable-line\r\n        pswp.scrollWrap.ontouchend = () => {}; // eslint-disable-line\r\n      } else {\r\n        this._bindEvents('mouse', 'down', 'up');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\r\n  _bindEvents(pref, down, up, cancel) {\r\n    const { pswp } = this;\r\n    const { events } = pswp;\r\n\r\n    const cancelEvent = cancel ? pref + cancel : '';\r\n\r\n    events.add(pswp.scrollWrap, pref + down, this.onPointerDown.bind(this));\r\n    events.add(window, pref + 'move', this.onPointerMove.bind(this));\r\n    events.add(window, pref + up, this.onPointerUp.bind(this));\r\n    if (cancelEvent) {\r\n      events.add(pswp.scrollWrap, cancelEvent, this.onPointerUp.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerDown(e) {\r\n    // We do not call preventDefault for touch events\r\n    // to allow browser to show native dialog on longpress\r\n    // (the one that allows to save image or open it in new tab).\r\n    //\r\n    // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\r\n    // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\r\n    let isMousePointer;\r\n    if (e.type === 'mousedown' || e.pointerType === 'mouse') {\r\n      isMousePointer = true;\r\n    }\r\n\r\n    // Allow dragging only via left mouse button.\r\n    // http://www.quirksmode.org/js/events_properties.html\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/event.button\r\n    if (isMousePointer && e.button > 0) {\r\n      return;\r\n    }\r\n\r\n    const { pswp } = this;\r\n\r\n    // if PhotoSwipe is opening or closing\r\n    if (!pswp.opener.isOpen) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (pswp.dispatch('pointerDown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (isMousePointer) {\r\n      pswp.mouseDetected();\r\n\r\n      // preventDefault mouse event to prevent\r\n      // browser image drag feature\r\n      this._preventPointerEventBehaviour(e);\r\n    }\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    this._updatePoints(e, 'down');\r\n\r\n    this.pointerDown = true;\r\n\r\n    if (this._numActivePoints === 1) {\r\n      this.dragAxis = null;\r\n      // we need to store initial point to determine the main axis,\r\n      // drag is activated only after the axis is determined\r\n      equalizePoints(this.startP1, this.p1);\r\n    }\r\n\r\n    if (this._numActivePoints > 1) {\r\n      // Tap or double tap should not trigger if more than one pointer\r\n      this._clearTapTimer();\r\n      this.isMultitouch = true;\r\n    } else {\r\n      this.isMultitouch = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerMove(e) {\r\n    e.preventDefault(); // always preventDefault move event\r\n\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'move');\r\n\r\n    if (this.pswp.dispatch('pointerMove', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 1 && !this.isDragging) {\r\n      if (!this.dragAxis) {\r\n        this._calculateDragDirection();\r\n      }\r\n\r\n      // Drag axis was detected, emit drag.start\r\n      if (this.dragAxis && !this.isDragging) {\r\n        if (this.isZooming) {\r\n          this.isZooming = false;\r\n          this.zoomLevels.end();\r\n        }\r\n\r\n        this.isDragging = true;\r\n        this._clearTapTimer(); // Tap can not trigger after drag\r\n\r\n        // Adjust starting point\r\n        this._updateStartPoints();\r\n        this._intervalTime = Date.now();\r\n        //this._startTime = this._intervalTime;\r\n        this._velocityCalculated = false;\r\n        equalizePoints(this._intervalP1, this.p1);\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n        this.drag.start();\r\n\r\n        this._rafStopLoop();\r\n        this._rafRenderLoop();\r\n      }\r\n    } else if (this._numActivePoints > 1 && !this.isZooming) {\r\n      this._finishDrag();\r\n\r\n      this.isZooming = true;\r\n\r\n      // Adjust starting points\r\n      this._updateStartPoints();\r\n\r\n      this.zoomLevels.start();\r\n\r\n      this._rafStopLoop();\r\n      this._rafRenderLoop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finishDrag() {\r\n    if (this.isDragging) {\r\n      this.isDragging = false;\r\n\r\n      // Try to calculate velocity,\r\n      // if it wasn't calculated yet in drag.change\r\n      if (!this._velocityCalculated) {\r\n        this._updateVelocity(true);\r\n      }\r\n\r\n      this.drag.end();\r\n      this.dragAxis = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} e\r\n   */\r\n  onPointerUp(e) {\r\n    if (!this._numActivePoints) {\r\n      return;\r\n    }\r\n\r\n    this._updatePoints(e, 'up');\r\n\r\n    if (this.pswp.dispatch('pointerUp', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (this._numActivePoints === 0) {\r\n      this.pointerDown = false;\r\n      this._rafStopLoop();\r\n\r\n      if (this.isDragging) {\r\n        this._finishDrag();\r\n      } else if (!this.isZooming && !this.isMultitouch) {\r\n        //this.zoomLevels.correctZoomPan();\r\n        this._finishTap(e);\r\n      }\r\n    }\r\n\r\n    if (this._numActivePoints < 2 && this.isZooming) {\r\n      this.isZooming = false;\r\n      this.zoomLevels.end();\r\n\r\n      if (this._numActivePoints === 1) {\r\n        // Since we have 1 point left, we need to reinitiate drag\r\n        this.dragAxis = null;\r\n        this._updateStartPoints();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafRenderLoop() {\r\n    if (this.isDragging || this.isZooming) {\r\n      this._updateVelocity();\r\n\r\n      if (this.isDragging) {\r\n        // make sure that pointer moved since the last update\r\n        if (!pointsEqual(this.p1, this.prevP1)) {\r\n          this.drag.change();\r\n        }\r\n      } else /* if (this.isZooming) */ {\r\n        if (!pointsEqual(this.p1, this.prevP1)\r\n            || !pointsEqual(this.p2, this.prevP2)) {\r\n          this.zoomLevels.change();\r\n        }\r\n      }\r\n\r\n      this._updatePrevPoints();\r\n      this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update velocity at 50ms interval\r\n   *\r\n   * @param {boolean=} force\r\n   */\r\n  _updateVelocity(force) {\r\n    const time = Date.now();\r\n    const duration = time - this._intervalTime;\r\n\r\n    if (duration < 50 && !force) {\r\n      return;\r\n    }\r\n\r\n\r\n    this.velocity.x = this._getVelocity('x', duration);\r\n    this.velocity.y = this._getVelocity('y', duration);\r\n\r\n    this._intervalTime = time;\r\n    equalizePoints(this._intervalP1, this.p1);\r\n    this._velocityCalculated = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _finishTap(e) {\r\n    const { mainScroll } = this.pswp;\r\n\r\n    // Do not trigger tap events if main scroll is shifted\r\n    if (mainScroll.isShifted()) {\r\n      // restore main scroll position\r\n      // (usually happens if stopped in the middle of animation)\r\n      mainScroll.moveIndexBy(0, true);\r\n      return;\r\n    }\r\n\r\n    // Do not trigger tap for touchcancel or pointercancel\r\n    if (e.type.indexOf('cancel') > 0) {\r\n      return;\r\n    }\r\n\r\n    // Trigger click instead of tap for mouse events\r\n    if (e.type === 'mouseup' || e.pointerType === 'mouse') {\r\n      this.tapHandler.click(this.startP1, e);\r\n      return;\r\n    }\r\n\r\n    // Disable delay if there is no doubleTapAction\r\n    const tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0;\r\n\r\n    // If tapTimer is defined - we tapped recently,\r\n    // check if the current tap is close to the previous one,\r\n    // if yes - trigger double tap\r\n    if (this._tapTimer) {\r\n      this._clearTapTimer();\r\n      // Check if two taps were more or less on the same place\r\n      if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\r\n        this.tapHandler.doubleTap(this.startP1, e);\r\n      }\r\n    } else {\r\n      equalizePoints(this._lastStartP1, this.startP1);\r\n      this._tapTimer = setTimeout(() => {\r\n        this.tapHandler.tap(this.startP1, e);\r\n        this._clearTapTimer();\r\n      }, tapDelay);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _clearTapTimer() {\r\n    if (this._tapTimer) {\r\n      clearTimeout(this._tapTimer);\r\n      this._tapTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get velocity for axis\r\n   *\r\n   * @private\r\n   * @param {'x' | 'y'} axis\r\n   * @param {number} duration\r\n   */\r\n  _getVelocity(axis, duration) {\r\n    // displacement is like distance, but can be negative.\r\n    const displacement = this.p1[axis] - this._intervalP1[axis];\r\n\r\n    if (Math.abs(displacement) > 1 && duration > 5) {\r\n      return displacement / duration;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _rafStopLoop() {\r\n    if (this.raf) {\r\n      cancelAnimationFrame(this.raf);\r\n      this.raf = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _preventPointerEventBehaviour(e) {\r\n    // TODO find a way to disable e.preventDefault on some elements\r\n    //      via event or some class or something\r\n    e.preventDefault();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Parses and normalizes points from the touch, mouse or pointer event.\r\n   * Updates p1 and p2.\r\n   *\r\n   * @private\r\n   * @param {PointerEvent | TouchEvent} e\r\n   * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n   */\r\n  _updatePoints(e, pointerType) {\r\n    if (this._pointerEventEnabled) {\r\n      const pointerEvent = /** @type {PointerEvent} */ (e);\r\n      // Try to find the current pointer in ongoing pointers by its ID\r\n      const pointerIndex = this._ongoingPointers.findIndex((ongoingPoiner) => {\r\n        return ongoingPoiner.id === pointerEvent.pointerId;\r\n      });\r\n\r\n      if (pointerType === 'up' && pointerIndex > -1) {\r\n        // release the pointer - remove it from ongoing\r\n        this._ongoingPointers.splice(pointerIndex, 1);\r\n      } else if (pointerType === 'down' && pointerIndex === -1) {\r\n        // add new pointer\r\n        this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, {}));\r\n      } else if (pointerIndex > -1) {\r\n        // update existing pointer\r\n        this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\r\n      }\r\n\r\n      this._numActivePoints = this._ongoingPointers.length;\r\n\r\n      // update points that PhotoSwipe uses\r\n      // to calculate position and scale\r\n      if (this._numActivePoints > 0) {\r\n        equalizePoints(this.p1, this._ongoingPointers[0]);\r\n      }\r\n\r\n      if (this._numActivePoints > 1) {\r\n        equalizePoints(this.p2, this._ongoingPointers[1]);\r\n      }\r\n    } else {\r\n      const touchEvent = /** @type {TouchEvent} */ (e);\r\n\r\n      this._numActivePoints = 0;\r\n      if (touchEvent.type.indexOf('touch') > -1) {\r\n        // Touch Event\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\r\n        if (touchEvent.touches && touchEvent.touches.length > 0) {\r\n          this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\r\n          this._numActivePoints++;\r\n          if (touchEvent.touches.length > 1) {\r\n            this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\r\n            this._numActivePoints++;\r\n          }\r\n        }\r\n      } else {\r\n        // Mouse Event\r\n        this._convertEventPosToPoint(/** @type {PointerEvent} */ (e), this.p1);\r\n        if (pointerType === 'up') {\r\n          // clear all points on mouseup\r\n          this._numActivePoints = 0;\r\n        } else {\r\n          this._numActivePoints++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // update points that were used during previous rAF tick\r\n  _updatePrevPoints() {\r\n    equalizePoints(this.prevP1, this.p1);\r\n    equalizePoints(this.prevP2, this.p2);\r\n  }\r\n\r\n  // update points at the start of gesture\r\n  _updateStartPoints() {\r\n    equalizePoints(this.startP1, this.p1);\r\n    equalizePoints(this.startP2, this.p2);\r\n    this._updatePrevPoints();\r\n  }\r\n\r\n  _calculateDragDirection() {\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      // if main scroll position is shifted – direction is always horizontal\r\n      this.dragAxis = 'x';\r\n    } else {\r\n      // calculate delta of the last touchmove tick\r\n      const diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\r\n\r\n      if (diff !== 0) {\r\n        // check if pointer was shifted horizontally or vertically\r\n        const axisToCheck = diff > 0 ? 'x' : 'y';\r\n\r\n        if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\r\n          this.dragAxis = axisToCheck;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts touch, pointer or mouse event\r\n   * to PhotoSwipe point.\r\n   *\r\n   * @private\r\n   * @param {Touch | PointerEvent} e\r\n   * @param {Point} p\r\n   */\r\n  _convertEventPosToPoint(e, p) {\r\n    p.x = e.pageX - this.pswp.offset.x;\r\n    p.y = e.pageY - this.pswp.offset.y;\r\n\r\n    if ('pointerId' in e) {\r\n      p.id = e.pointerId;\r\n    } else if (e.identifier !== undefined) {\r\n      p.id = e.identifier;\r\n    }\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {PointerEvent} e\r\n   */\r\n  _onClick(e) {\r\n    // Do not allow click event to pass through after drag\r\n    if (this.pswp.mainScroll.isShifted()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gestures;\r\n","import {\r\n  setTransform,\r\n  createElement,\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/slide.js').default} Slide */\r\n\r\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\r\n\r\nconst MAIN_SCROLL_END_FRICTION = 0.35;\r\n\r\n\r\n// const MIN_SWIPE_TRANSITION_DURATION = 250;\r\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\r\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\r\n\r\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\r\nclass MainScroll {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.x = 0;\r\n\r\n    /** @type {number} */\r\n    this.slideWidth = undefined;\r\n\r\n    /** @type {ItemHolder[]} */\r\n    this.itemHolders = undefined;\r\n\r\n    this.resetPosition();\r\n  }\r\n\r\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean=} resizeSlides Whether slides content should resized\r\n   */\r\n  resize(resizeSlides) {\r\n    const { pswp } = this;\r\n    const newSlideWidth = Math.round(\r\n      pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing\r\n    );\r\n    // Mobile browsers might trigger a resize event during a gesture.\r\n    // (due to toolbar appearing or hiding).\r\n    // Avoid re-adjusting main scroll position if width wasn't changed\r\n    const slideWidthChanged = (newSlideWidth !== this.slideWidth);\r\n\r\n    if (slideWidthChanged) {\r\n      this.slideWidth = newSlideWidth;\r\n      this.moveTo(this.getCurrSlideX());\r\n    }\r\n\r\n    this.itemHolders.forEach((itemHolder, index) => {\r\n      if (slideWidthChanged) {\r\n        setTransform(itemHolder.el, (index + this._containerShiftIndex)\r\n                                    * this.slideWidth);\r\n      }\r\n\r\n      if (resizeSlides && itemHolder.slide) {\r\n        itemHolder.slide.resize();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset X position of the main scroller to zero\r\n   */\r\n  resetPosition() {\r\n    // Position on the main scroller (offset)\r\n    // it is independent from slide index\r\n    this._currPositionIndex = 0;\r\n    this._prevPositionIndex = 0;\r\n\r\n    // This will force recalculation of size on next resize()\r\n    this.slideWidth = 0;\r\n\r\n    // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\r\n    this._containerShiftIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Create and append array of three items\r\n   * that hold data about slides in DOM\r\n   */\r\n  appendHolders() {\r\n    this.itemHolders = [];\r\n\r\n    // append our three slide holders -\r\n    // previous, current, and next\r\n    for (let i = 0; i < 3; i++) {\r\n      const el = createElement('pswp__item', false, this.pswp.container);\r\n\r\n      // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\r\n      el.style.display = (i === 1) ? 'block' : 'none';\r\n\r\n      this.itemHolders.push({\r\n        el,\r\n        //index: -1\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n   */\r\n  canBeSwiped() {\r\n    return this.pswp.getNumItems() > 1;\r\n  }\r\n\r\n  /**\r\n   * Move main scroll by X amount of slides.\r\n   * For example:\r\n   *   `-1` will move to the previous slide,\r\n   *    `0` will reset the scroll position of the current slide,\r\n   *    `3` will move three slides forward\r\n   *\r\n   * If loop option is enabled - index will be automatically looped too,\r\n   * (for example `-1` will move to the last slide of the gallery).\r\n   *\r\n   * @param {number} diff\r\n   * @param {boolean=} animate\r\n   * @param {number=} velocityX\r\n   * @returns {boolean} whether index was changed or not\r\n   */\r\n  moveIndexBy(diff, animate, velocityX) {\r\n    const { pswp } = this;\r\n    let newIndex = pswp.potentialIndex + diff;\r\n    const numSlides = pswp.getNumItems();\r\n\r\n    if (pswp.canLoop()) {\r\n      newIndex = pswp.getLoopedIndex(newIndex);\r\n      const distance = (diff + numSlides) % numSlides;\r\n      if (distance <= numSlides / 2) {\r\n        // go forward\r\n        diff = distance;\r\n      } else {\r\n        // go backwards\r\n        diff = distance - numSlides;\r\n      }\r\n    } else {\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      } else if (newIndex >= numSlides) {\r\n        newIndex = numSlides - 1;\r\n      }\r\n      diff = newIndex - pswp.potentialIndex;\r\n    }\r\n\r\n    pswp.potentialIndex = newIndex;\r\n    this._currPositionIndex -= diff;\r\n\r\n    pswp.animations.stopMainScroll();\r\n\r\n    const destinationX = this.getCurrSlideX();\r\n    if (!animate) {\r\n      this.moveTo(destinationX);\r\n      this.updateCurrItem();\r\n    } else {\r\n      pswp.animations.startSpring({\r\n        isMainScroll: true,\r\n        start: this.x,\r\n        end: destinationX,\r\n        velocity: velocityX || 0,\r\n        naturalFrequency: 30,\r\n        dampingRatio: 1, //0.7,\r\n        onUpdate: (x) => {\r\n          this.moveTo(x);\r\n        },\r\n        onComplete: () => {\r\n          this.updateCurrItem();\r\n          pswp.appendHeavy();\r\n        }\r\n      });\r\n\r\n      let currDiff = pswp.potentialIndex - pswp.currIndex;\r\n      if (pswp.canLoop()) {\r\n        const currDistance = (currDiff + numSlides) % numSlides;\r\n        if (currDistance <= numSlides / 2) {\r\n          // go forward\r\n          currDiff = currDistance;\r\n        } else {\r\n          // go backwards\r\n          currDiff = currDistance - numSlides;\r\n        }\r\n      }\r\n\r\n      // Force-append new slides during transition\r\n      // if difference between slides is more than 1\r\n      if (Math.abs(currDiff) > 1) {\r\n        this.updateCurrItem();\r\n      }\r\n    }\r\n\r\n    if (diff) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * X position of the main scroll for the current slide\r\n   * (ignores position during dragging)\r\n   */\r\n  getCurrSlideX() {\r\n    return this.slideWidth * this._currPositionIndex;\r\n  }\r\n\r\n  /**\r\n   * Whether scroll position is shifted.\r\n   * For example, it will return true if the scroll is being dragged or animated.\r\n   */\r\n  isShifted() {\r\n    return this.x !== this.getCurrSlideX();\r\n  }\r\n\r\n  /**\r\n   * Update slides X positions and set their content\r\n   */\r\n  updateCurrItem() {\r\n    const { pswp } = this;\r\n    const positionDifference = this._prevPositionIndex - this._currPositionIndex;\r\n\r\n    if (!positionDifference) {\r\n      return;\r\n    }\r\n\r\n    this._prevPositionIndex = this._currPositionIndex;\r\n\r\n    pswp.currIndex = pswp.potentialIndex;\r\n\r\n    let diffAbs = Math.abs(positionDifference);\r\n    let tempHolder;\r\n\r\n    if (diffAbs >= 3) {\r\n      this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\r\n      diffAbs = 3;\r\n    }\r\n\r\n    for (let i = 0; i < diffAbs; i++) {\r\n      if (positionDifference > 0) {\r\n        tempHolder = this.itemHolders.shift();\r\n        this.itemHolders[2] = tempHolder; // move first to last\r\n\r\n        this._containerShiftIndex++;\r\n\r\n        setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\r\n\r\n        pswp.setContent(tempHolder, (pswp.currIndex - diffAbs) + i + 2);\r\n      } else {\r\n        tempHolder = this.itemHolders.pop();\r\n        this.itemHolders.unshift(tempHolder); // move last to first\r\n\r\n        this._containerShiftIndex--;\r\n\r\n        setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\r\n\r\n        pswp.setContent(tempHolder, (pswp.currIndex + diffAbs) - i - 2);\r\n      }\r\n    }\r\n\r\n    // Reset transfrom every 50ish navigations in one direction.\r\n    //\r\n    // Otherwise transform will keep growing indefinitely,\r\n    // which might cause issues as browsers have a maximum transform limit.\r\n    // I wasn't able to reach it, but just to be safe.\r\n    // This should not cause noticable lag.\r\n    if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\r\n      this.resetPosition();\r\n      this.resize();\r\n    }\r\n\r\n    // Pan transition might be running (and consntantly updating pan position)\r\n    pswp.animations.stopAllPan();\r\n\r\n    this.itemHolders.forEach((itemHolder, i) => {\r\n      if (itemHolder.slide) {\r\n        // Slide in the 2nd holder is always active\r\n        itemHolder.slide.setIsActive(i === 1);\r\n      }\r\n    });\r\n\r\n    pswp.currSlide = this.itemHolders[1].slide;\r\n    pswp.contentLoader.updateLazy(positionDifference);\r\n\r\n    pswp.currSlide.applyCurrentZoomPan();\r\n    pswp.dispatch('change');\r\n  }\r\n\r\n  /**\r\n   * Move the X position of the main scroll container\r\n   *\r\n   * @param {number} x\r\n   * @param {boolean=} dragging\r\n   */\r\n  moveTo(x, dragging) {\r\n    /** @type {number} */\r\n    let newSlideIndexOffset;\r\n    /** @type {number} */\r\n    let delta;\r\n\r\n    if (!this.pswp.canLoop() && dragging) {\r\n      // Apply friction\r\n      newSlideIndexOffset = ((this.slideWidth * this._currPositionIndex) - x) / this.slideWidth;\r\n      newSlideIndexOffset += this.pswp.currIndex;\r\n      delta = Math.round(x - this.x);\r\n\r\n      if ((newSlideIndexOffset < 0 && delta > 0)\r\n          || (newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0)) {\r\n        x = this.x + (delta * MAIN_SCROLL_END_FRICTION);\r\n      }\r\n    }\r\n\r\n    this.x = x;\r\n    setTransform(this.pswp.container, x);\r\n\r\n    this.pswp.dispatch('moveMainScroll', { x, dragging });\r\n  }\r\n}\r\n\r\nexport default MainScroll;\r\n","import { specialKeyUsed } from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Heps trap focus within photoswipe.\r\n */\r\nclass Keyboard {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    pswp.on('bindEvents', () => {\r\n      // Dialog was likely opened by keyboard if initial point is not defined\r\n      if (!pswp.options.initialPointerPos) {\r\n        // focus causes layout,\r\n        // which causes lag during the animation,\r\n        // that's why we delay it until the opener transition ends\r\n        this._focusRoot();\r\n      }\r\n\r\n      pswp.events.add(document, 'focusin', this._onFocusIn.bind(this));\r\n      pswp.events.add(document, 'keydown', this._onKeyDown.bind(this));\r\n    });\r\n\r\n    const lastActiveElement = /** @type {HTMLElement} */ (document.activeElement);\r\n    pswp.on('destroy', () => {\r\n      if (pswp.options.returnFocus\r\n          && lastActiveElement\r\n          && this._wasFocused) {\r\n        lastActiveElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  _focusRoot() {\r\n    if (!this._wasFocused) {\r\n      this.pswp.element.focus();\r\n      this._wasFocused = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {KeyboardEvent} e\r\n   */\r\n  _onKeyDown(e) {\r\n    const { pswp } = this;\r\n\r\n    if (pswp.dispatch('keydown', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (specialKeyUsed(e)) {\r\n      // don't do anything if special key pressed\r\n      // to prevent from overriding default browser actions\r\n      // for example, in Chrome on Mac cmd+arrow-left returns to previous page\r\n      return;\r\n    }\r\n\r\n    /** @type {Methods<PhotoSwipe>} */\r\n    let keydownAction;\r\n    /** @type {'x' | 'y'} */\r\n    let axis;\r\n    let isForward;\r\n\r\n    switch (e.keyCode) {\r\n      case 27: // esc\r\n        if (pswp.options.escKey) {\r\n          keydownAction = 'close';\r\n        }\r\n        break;\r\n      case 90: // z key\r\n        keydownAction = 'toggleZoom';\r\n        break;\r\n      case 37: // left\r\n        axis = 'x';\r\n        break;\r\n      case 38: // top\r\n        axis = 'y';\r\n        break;\r\n      case 39: // right\r\n        axis = 'x';\r\n        isForward = true;\r\n        break;\r\n      case 40: // bottom\r\n        isForward = true;\r\n        axis = 'y';\r\n        break;\r\n      case 9: // tab\r\n        this._focusRoot();\r\n        break;\r\n      default:\r\n    }\r\n\r\n    // if left/right/top/bottom key\r\n    if (axis) {\r\n      // prevent page scroll\r\n      e.preventDefault();\r\n\r\n      const { currSlide } = pswp;\r\n\r\n      if (pswp.options.arrowKeys\r\n          && axis === 'x'\r\n          && pswp.getNumItems() > 1) {\r\n        keydownAction = isForward ? 'next' : 'prev';\r\n      } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\r\n        // up/down arrow keys pan the image vertically\r\n        // left/right arrow keys pan horizontally.\r\n        // Unless there is only one image,\r\n        // or arrowKeys option is disabled\r\n        currSlide.pan[axis] += isForward ? -80 : 80;\r\n        currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\r\n      }\r\n    }\r\n\r\n    if (keydownAction) {\r\n      e.preventDefault();\r\n      pswp[keydownAction]();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trap focus inside photoswipe\r\n   *\r\n   * @param {FocusEvent} e\r\n   */\r\n  _onFocusIn(e) {\r\n    const { template } = this.pswp;\r\n    if (document !== e.target\r\n        && template !== e.target\r\n        && !template.contains(/** @type {Node} */ (e.target))) {\r\n      // focus root element\r\n      template.focus();\r\n    }\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n","import { setTransitionStyle, removeTransitionStyle } from './util.js';\r\n\r\nconst DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\r\n\r\n/** @typedef {import('./animations.js').AnimationProps} AnimationProps */\r\n\r\n/**\r\n * Runs CSS transition.\r\n */\r\nclass CSSAnimation {\r\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {AnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n    const {\r\n      target,\r\n      onComplete,\r\n      transform,\r\n      onFinish\r\n      // opacity\r\n    } = props;\r\n\r\n    let {\r\n      duration,\r\n      easing,\r\n    } = props;\r\n\r\n    /** @type {() => void} */\r\n    this.onFinish = onFinish;\r\n\r\n    // support only transform and opacity\r\n    const prop = transform ? 'transform' : 'opacity';\r\n    const propValue = props[prop];\r\n\r\n    /** @private */\r\n    this._target = target;\r\n    /** @private */\r\n    this._onComplete = onComplete;\r\n\r\n    duration = duration || 333;\r\n    easing = easing || DEFAULT_EASING;\r\n\r\n    /** @private */\r\n    this._onTransitionEnd = this._onTransitionEnd.bind(this);\r\n\r\n    // Using timeout hack to make sure that animation\r\n    // starts even if the animated property was changed recently,\r\n    // otherwise transitionend might not fire or transiton won't start.\r\n    // https://drafts.csswg.org/css-transitions/#starting\r\n    //\r\n    // ¯\\_(ツ)_/¯\r\n    /** @private */\r\n    this._helperTimeout = setTimeout(() => {\r\n      setTransitionStyle(target, prop, duration, easing);\r\n      this._helperTimeout = setTimeout(() => {\r\n        target.addEventListener('transitionend', this._onTransitionEnd, false);\r\n        target.addEventListener('transitioncancel', this._onTransitionEnd, false);\r\n\r\n        // Safari occasionally does not emit transitionend event\r\n        // if element propery was modified during the transition,\r\n        // which may be caused by resize or third party component,\r\n        // using timeout as a safety fallback\r\n        this._helperTimeout = setTimeout(() => {\r\n          this._finalizeAnimation();\r\n        }, duration + 500);\r\n        target.style[prop] = propValue;\r\n      }, 30); // Do not reduce this number\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\r\n  _onTransitionEnd(e) {\r\n    if (e.target === this._target) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  _finalizeAnimation() {\r\n    if (!this._finished) {\r\n      this._finished = true;\r\n      this.onFinish();\r\n      if (this._onComplete) {\r\n        this._onComplete();\r\n      }\r\n    }\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._helperTimeout) {\r\n      clearTimeout(this._helperTimeout);\r\n    }\r\n    removeTransitionStyle(this._target);\r\n    this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\r\n    this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\r\n    if (!this._finished) {\r\n      this._finalizeAnimation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default CSSAnimation;\r\n","const DEFAULT_NATURAL_FREQUENCY = 12;\r\nconst DEFAULT_DAMPING_RATIO = 0.75;\r\n\r\n/**\r\n * Spring easing helper\r\n */\r\nclass SpringEaser {\r\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} dampingRatio\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} naturalFrequency\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\r\n  constructor(initialVelocity, dampingRatio, naturalFrequency) {\r\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\r\n\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO;\r\n\r\n    // https://en.wikipedia.org/wiki/Natural_frequency\r\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\r\n\r\n    if (this._dampingRatio < 1) {\r\n      this._dampedFrequency = this._naturalFrequency\r\n                         * Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\r\n  easeFrame(deltaPosition, deltaTime) {\r\n    // Inspired by Apple Webkit and Android spring function implementation\r\n    // https://en.wikipedia.org/wiki/Oscillation\r\n    // https://en.wikipedia.org/wiki/Damping_ratio\r\n    // we ignore mass (assume that it's 1kg)\r\n\r\n    let displacement = 0;\r\n    let coeff;\r\n\r\n    deltaTime /= 1000;\r\n\r\n    const naturalDumpingPow = Math.E ** (-this._dampingRatio * this._naturalFrequency * deltaTime);\r\n\r\n    if (this._dampingRatio === 1) {\r\n      coeff = this.velocity + this._naturalFrequency * deltaPosition;\r\n\r\n      displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency) + coeff\r\n                        * naturalDumpingPow;\r\n    } else if (this._dampingRatio < 1) {\r\n      coeff = (1 / this._dampedFrequency)\r\n                * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\r\n\r\n      const dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\r\n      const dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\r\n\r\n      displacement = naturalDumpingPow\r\n                       * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\r\n\r\n      this.velocity = displacement\r\n                        * (-this._naturalFrequency)\r\n                        * this._dampingRatio\r\n                        + naturalDumpingPow\r\n                        * (-this._dampedFrequency * deltaPosition * dumpedFSin\r\n                        + this._dampedFrequency * coeff * dumpedFCos);\r\n    }\r\n\r\n    // Overdamped (>1) damping ratio is not supported\r\n\r\n    return displacement;\r\n  }\r\n}\r\n\r\nexport default SpringEaser;\r\n","import SpringEaser from './spring-easer.js';\r\n\r\n/** @typedef {import('./animations.js').AnimationProps} AnimationProps */\r\n\r\nclass SpringAnimation {\r\n  /**\r\n   * @param {AnimationProps} props\r\n   */\r\n  constructor(props) {\r\n    this.props = props;\r\n\r\n    const {\r\n      start,\r\n      end,\r\n      velocity,\r\n      onUpdate,\r\n      onComplete,\r\n      onFinish,\r\n      dampingRatio,\r\n      naturalFrequency\r\n    } = props;\r\n\r\n    /** @type {() => void} */\r\n    this.onFinish = onFinish;\r\n\r\n    const easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\r\n    let prevTime = Date.now();\r\n    let deltaPosition = start - end;\r\n\r\n    const animationLoop = () => {\r\n      if (this._raf) {\r\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime);\r\n\r\n        // Stop the animation if velocity is low and position is close to end\r\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\r\n          // Finalize the animation\r\n          onUpdate(end);\r\n          if (onComplete) {\r\n            onComplete();\r\n          }\r\n          this.onFinish();\r\n        } else {\r\n          prevTime = Date.now();\r\n          onUpdate(deltaPosition + end);\r\n          this._raf = requestAnimationFrame(animationLoop);\r\n        }\r\n      }\r\n    };\r\n\r\n    this._raf = requestAnimationFrame(animationLoop);\r\n  }\r\n\r\n  // Destroy is called automatically onFinish\r\n  destroy() {\r\n    if (this._raf >= 0) {\r\n      cancelAnimationFrame(this._raf);\r\n    }\r\n    this._raf = null;\r\n  }\r\n}\r\n\r\nexport default SpringAnimation;\r\n","import CSSAnimation from './css-animation.js';\r\nimport SpringAnimation from './spring-animation.js';\r\n\r\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\r\n\r\n/**\r\n * @typedef {Object} AnimationProps\r\n *\r\n * @prop {HTMLElement=} target\r\n *\r\n * @prop {string=} name\r\n *\r\n * @prop {number=} start\r\n * @prop {number=} end\r\n * @prop {number=} duration\r\n * @prop {number=} velocity\r\n * @prop {number=} dampingRatio\r\n * @prop {number=} naturalFrequency\r\n *\r\n * @prop {(end: number) => void} [onUpdate]\r\n * @prop {() => void} [onComplete]\r\n * @prop {() => void} [onFinish]\r\n *\r\n * @prop {string=} transform\r\n * @prop {string=} opacity\r\n * @prop {string=} easing\r\n *\r\n * @prop {boolean=} isPan\r\n * @prop {boolean=} isMainScroll\r\n */\r\n\r\n/**\r\n * Manages animations\r\n */\r\nclass Animations {\r\n  constructor() {\r\n    /** @type {Animation[]} */\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * @param {AnimationProps} props\r\n   */\r\n  startSpring(props) {\r\n    this._start(props, true);\r\n  }\r\n\r\n  /**\r\n   * @param {AnimationProps} props\r\n   */\r\n  startTransition(props) {\r\n    this._start(props);\r\n  }\r\n\r\n  /**\r\n   * @param {AnimationProps} props\r\n   * @param {boolean=} isSpring\r\n   */\r\n  _start(props, isSpring) {\r\n    /** @type {Animation} */\r\n    let animation;\r\n    if (isSpring) {\r\n      animation = new SpringAnimation(props);\r\n    } else {\r\n      animation = new CSSAnimation(props);\r\n    }\r\n\r\n    this.activeAnimations.push(animation);\r\n    animation.onFinish = () => this.stop(animation);\r\n\r\n    return animation;\r\n  }\r\n\r\n  /**\r\n   * @param {Animation} animation\r\n   */\r\n  stop(animation) {\r\n    animation.destroy();\r\n    const index = this.activeAnimations.indexOf(animation);\r\n    if (index > -1) {\r\n      this.activeAnimations.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  stopAll() { // _stopAllAnimations\r\n    this.activeAnimations.forEach((animation) => {\r\n      animation.destroy();\r\n    });\r\n    this.activeAnimations = [];\r\n  }\r\n\r\n  /**\r\n   * Stop all pan or zoom transitions\r\n   */\r\n  stopAllPan() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isPan) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  stopMainScroll() {\r\n    this.activeAnimations = this.activeAnimations.filter((animation) => {\r\n      if (animation.props.isMainScroll) {\r\n        animation.destroy();\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if main scroll transition is running\r\n   */\r\n  // isMainScrollRunning() {\r\n  //   return this.activeAnimations.some((animation) => {\r\n  //     return animation.props.isMainScroll;\r\n  //   });\r\n  // }\r\n\r\n  /**\r\n   * Returns true if any pan or zoom transition is running\r\n   */\r\n  isPanRunning() {\r\n    return this.activeAnimations.some((animation) => {\r\n      return animation.props.isPan;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Animations;\r\n","/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\r\nclass ScrollWheel {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    pswp.events.add(pswp.element, 'wheel', this._onWheel.bind(this));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\r\n  _onWheel(e) {\r\n    e.preventDefault();\r\n    const { currSlide } = this.pswp;\r\n    let { deltaX, deltaY } = e;\r\n\r\n    if (!currSlide) {\r\n      return;\r\n    }\r\n\r\n    if (this.pswp.dispatch('wheel', { originalEvent: e }).defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    if (e.ctrlKey || this.pswp.options.wheelToZoom) {\r\n      // zoom\r\n      if (currSlide.isZoomable()) {\r\n        let zoomFactor = -deltaY;\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          zoomFactor *= 0.05;\r\n        } else {\r\n          zoomFactor *= e.deltaMode ? 1 : 0.002;\r\n        }\r\n        zoomFactor = 2 ** zoomFactor;\r\n\r\n        const destZoomLevel = currSlide.currZoomLevel * zoomFactor;\r\n        currSlide.zoomTo(destZoomLevel, {\r\n          x: e.clientX,\r\n          y: e.clientY\r\n        });\r\n      }\r\n    } else {\r\n      // pan\r\n      if (currSlide.isPannable()) {\r\n        if (e.deltaMode === 1 /* DOM_DELTA_LINE */) {\r\n          // 18 - average line height\r\n          deltaX *= 18;\r\n          deltaY *= 18;\r\n        }\r\n\r\n        currSlide.panTo(\r\n          currSlide.pan.x - deltaX,\r\n          currSlide.pan.y - deltaY\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default ScrollWheel;\r\n","import { createElement } from '../util/util.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean=} isCustomSVG\r\n * @prop {string} inner\r\n * @prop {string=} outlineID\r\n * @prop {number | string} [size]\r\n */\r\n\r\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string=} className\r\n * @prop {UIElementMarkup=} html\r\n * @prop {boolean=} isButton\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string=} title\r\n * @prop {string=} ariaLabel\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number=} order\r\n */\r\n\r\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\r\n\r\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\r\n\r\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n */\r\nfunction addElementHTML(htmlData) {\r\n  if (typeof htmlData === 'string') {\r\n    // Allow developers to provide full svg,\r\n    // For example:\r\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\r\n    //   <path d=\"...\" />\r\n    //   <circle ... />\r\n    // </svg>\r\n    // Can also be any HTML string.\r\n    return htmlData;\r\n  }\r\n\r\n  if (!htmlData || !htmlData.isCustomSVG) {\r\n    return '';\r\n  }\r\n\r\n  const svgData = htmlData;\r\n  let out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">';\r\n  // replace all %d with size\r\n  out = out.split('%d').join(/** @type {string} */ (svgData.size || 32));\r\n\r\n  // Icons may contain outline/shadow,\r\n  // to make it we \"clone\" base icon shape and add border to it.\r\n  // Icon itself and border are styled via CSS.\r\n  //\r\n  // Property shadowID defines ID of element that should be cloned.\r\n  if (svgData.outlineID) {\r\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\r\n  }\r\n\r\n  out += svgData.inner;\r\n\r\n  out += '</svg>';\r\n\r\n  return out;\r\n}\r\n\r\nclass UIElement {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   * @param {UIElementData} data\r\n   */\r\n  constructor(pswp, data) {\r\n    const name = data.name || data.className;\r\n    let elementHTML = data.html;\r\n\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (pswp.options[name] === false) {\r\n      // exit if element is disabled from options\r\n      return;\r\n    }\r\n\r\n    // Allow to override SVG icons from options\r\n    // @ts-expect-error lookup only by `data.name` maybe?\r\n    if (typeof pswp.options[name + 'SVG'] === 'string') {\r\n      // arrowPrevSVG\r\n      // arrowNextSVG\r\n      // closeSVG\r\n      // zoomSVG\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      elementHTML = pswp.options[name + 'SVG'];\r\n    }\r\n\r\n    pswp.dispatch('uiElementCreate', { data });\r\n\r\n    let className = '';\r\n    if (data.isButton) {\r\n      className += 'pswp__button ';\r\n      className += (data.className || `pswp__button--${data.name}`);\r\n    } else {\r\n      className += (data.className || `pswp__${data.name}`);\r\n    }\r\n\r\n    /** @type {HTMLElement} */\r\n    let element;\r\n    let tagName = data.isButton ? (data.tagName || 'button') : (data.tagName || 'div');\r\n    tagName = /** @type {keyof HTMLElementTagNameMap} */ (tagName.toLowerCase());\r\n    element = createElement(className, tagName);\r\n\r\n    if (data.isButton) {\r\n      // create button element\r\n      element = createElement(className, tagName);\r\n      if (tagName === 'button') {\r\n        /** @type {HTMLButtonElement} */ (element).type = 'button';\r\n      }\r\n\r\n      let { title } = data;\r\n      const { ariaLabel } = data;\r\n\r\n      // @ts-expect-error lookup only by `data.name` maybe?\r\n      if (typeof pswp.options[name + 'Title'] === 'string') {\r\n        // @ts-expect-error lookup only by `data.name` maybe?\r\n        title = pswp.options[name + 'Title'];\r\n      }\r\n\r\n      if (title) {\r\n        element.title = title;\r\n      }\r\n\r\n      if (ariaLabel || title) {\r\n        /** @type {HTMLElement} */ (element).setAttribute('aria-label', ariaLabel || title);\r\n      }\r\n    }\r\n\r\n    element.innerHTML = addElementHTML(elementHTML);\r\n\r\n    if (data.onInit) {\r\n      data.onInit(element, pswp);\r\n    }\r\n\r\n    if (data.onClick) {\r\n      element.onclick = (e) => {\r\n        if (typeof data.onClick === 'string') {\r\n          pswp[data.onClick]();\r\n        } else {\r\n          data.onClick(e, element, pswp);\r\n        }\r\n      };\r\n    }\r\n\r\n    // Top bar is default position\r\n    const appendTo = data.appendTo || 'bar';\r\n    let container;\r\n    if (appendTo === 'bar') {\r\n      if (!pswp.topBar) {\r\n        pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\r\n      }\r\n      container = pswp.topBar;\r\n    } else {\r\n      // element outside of top bar gets a secondary class\r\n      // that makes element fade out on close\r\n      element.classList.add('pswp__hide-on-close');\r\n\r\n      if (appendTo === 'wrapper') {\r\n        container = pswp.scrollWrap;\r\n      } else {\r\n        // root element\r\n        container = pswp.element;\r\n      }\r\n    }\r\n\r\n    container.appendChild(pswp.applyFilters('uiElement', element, data));\r\n  }\r\n}\r\n\r\nexport default UIElement;\r\n","/*\r\n  Backward and forward arrow buttons\r\n */\r\n\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean=} isNextButton\r\n */\r\nfunction initArrowButton(element, pswp, isNextButton) {\r\n  element.classList.add('pswp__button--arrow');\r\n  pswp.on('change', () => {\r\n    if (!pswp.options.loop) {\r\n      if (isNextButton) {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\r\n      } else {\r\n        /** @type {HTMLButtonElement} */\r\n        (element).disabled = !(pswp.currIndex > 0);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowPrev = {\r\n  name: 'arrowPrev',\r\n  className: 'pswp__button--arrow--prev',\r\n  title: 'Previous',\r\n  order: 10,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'prev',\r\n  onInit: initArrowButton\r\n};\r\n\r\n/** @type {UIElementData} */\r\nexport const arrowNext = {\r\n  name: 'arrowNext',\r\n  className: 'pswp__button--arrow--next',\r\n  title: 'Next',\r\n  order: 11,\r\n  isButton: true,\r\n  appendTo: 'wrapper',\r\n  html: {\r\n    isCustomSVG: true,\r\n    size: 60,\r\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\r\n    outlineID: 'pswp__icn-arrow'\r\n  },\r\n  onClick: 'next',\r\n  onInit: (el, pswp) => {\r\n    initArrowButton(el, pswp, true);\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst closeButton = {\r\n  name: 'close',\r\n  title: 'Close',\r\n  order: 20,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\r\n    outlineID: 'pswp__icn-close'\r\n  },\r\n  onClick: 'close'\r\n};\r\n\r\nexport default closeButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nconst zoomButton = {\r\n  name: 'zoom',\r\n  title: 'Zoom',\r\n  order: 10,\r\n  isButton: true,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>'\r\n          + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\r\n    outlineID: 'pswp__icn-zoom'\r\n  },\r\n  onClick: 'toggleZoom'\r\n};\r\n\r\nexport default zoomButton;\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const loadingIndicator = {\r\n  name: 'preloader',\r\n  appendTo: 'bar',\r\n  order: 7,\r\n  html: {\r\n    isCustomSVG: true,\r\n    // eslint-disable-next-line max-len\r\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\r\n    outlineID: 'pswp__icn-loading'\r\n  },\r\n  onInit: (indicatorElement, pswp) => {\r\n    /** @type {boolean} */\r\n    let isVisible;\r\n    /** @type {NodeJS.Timeout} */\r\n    let delayTimeout;\r\n\r\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\r\n    const toggleIndicatorClass = (className, add) => {\r\n      indicatorElement.classList[add ? 'add' : 'remove']('pswp__preloader--' + className);\r\n    };\r\n\r\n    /**\r\n     * @param {boolean} visible\r\n     */\r\n    const setIndicatorVisibility = (visible) => {\r\n      if (isVisible !== visible) {\r\n        isVisible = visible;\r\n        toggleIndicatorClass('active', visible);\r\n      }\r\n    };\r\n\r\n    const updatePreloaderVisibility = () => {\r\n      if (!pswp.currSlide.content.isLoading()) {\r\n        setIndicatorVisibility(false);\r\n        if (delayTimeout) {\r\n          clearTimeout(delayTimeout);\r\n          delayTimeout = null;\r\n        }\r\n        return;\r\n      }\r\n\r\n      if (!delayTimeout) {\r\n        // display loading indicator with delay\r\n        delayTimeout = setTimeout(() => {\r\n          setIndicatorVisibility(pswp.currSlide.content.isLoading());\r\n          delayTimeout = null;\r\n        }, pswp.options.preloaderDelay);\r\n      }\r\n    };\r\n\r\n    pswp.on('change', updatePreloaderVisibility);\r\n\r\n    pswp.on('loadComplete', (e) => {\r\n      if (pswp.currSlide === e.slide) {\r\n        updatePreloaderVisibility();\r\n      }\r\n    });\r\n\r\n    // expose the method\r\n    pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\r\n  }\r\n};\r\n","/** @type {import('./ui-element.js').UIElementData} UIElementData */\r\nexport const counterIndicator = {\r\n  name: 'counter',\r\n  order: 5,\r\n  onInit: (counterElement, pswp) => {\r\n    pswp.on('change', () => {\r\n      counterElement.innerText = (pswp.currIndex + 1)\r\n                                  + pswp.options.indexIndicatorSep\r\n                                  + pswp.getNumItems();\r\n    });\r\n  }\r\n};\r\n","import UIElement from './ui-element.js';\r\nimport { arrowPrev, arrowNext } from './button-arrow.js';\r\nimport closeButton from './button-close.js';\r\nimport zoomButton from './button-zoom.js';\r\nimport { loadingIndicator } from './loading-indicator.js';\r\nimport { counterIndicator } from './counter-indicator.js';\r\n\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\r\n\r\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\r\nfunction setZoomedIn(el, isZoomedIn) {\r\n  el.classList[isZoomedIn ? 'add' : 'remove']('pswp--zoomed-in');\r\n}\r\n\r\nclass UI {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n\r\n    /** @type {() => void} */\r\n    this.updatePreloaderVisibility = undefined;\r\n\r\n    /** @type {number} */\r\n    this._lastUpdatedZoomLevel = undefined;\r\n  }\r\n\r\n  init() {\r\n    const { pswp } = this;\r\n    this.isRegistered = false;\r\n    /** @type {UIElementData[]} */\r\n    this.uiElementsData = [\r\n      closeButton,\r\n      arrowPrev,\r\n      arrowNext,\r\n      zoomButton,\r\n      loadingIndicator,\r\n      counterIndicator\r\n    ];\r\n\r\n    pswp.dispatch('uiRegister');\r\n\r\n    // sort by order\r\n    this.uiElementsData.sort((a, b) => {\r\n      // default order is 0\r\n      return (a.order || 0) - (b.order || 0);\r\n    });\r\n\r\n    /** @type {(UIElement | UIElementData)[]} */\r\n    this.items = [];\r\n\r\n    this.isRegistered = true;\r\n    this.uiElementsData.forEach((uiElementData) => {\r\n      this.registerElement(uiElementData);\r\n    });\r\n\r\n    pswp.on('change', () => {\r\n      pswp.element.classList[pswp.getNumItems() === 1 ? 'add' : 'remove']('pswp--one-slide');\r\n    });\r\n\r\n    pswp.on('zoomPanUpdate', () => this._onZoomPanUpdate());\r\n  }\r\n\r\n  /**\r\n   * @param {UIElementData} elementData\r\n   */\r\n  registerElement(elementData) {\r\n    if (this.isRegistered) {\r\n      this.items.push(\r\n        new UIElement(this.pswp, elementData)\r\n      );\r\n    } else {\r\n      this.uiElementsData.push(elementData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired each time zoom or pan position is changed.\r\n   * Update classes that control visibility of zoom button and cursor icon.\r\n   */\r\n  _onZoomPanUpdate() {\r\n    const { template, currSlide, options } = this.pswp;\r\n    let { currZoomLevel } = currSlide;\r\n\r\n    if (this.pswp.opener.isClosing) {\r\n      return;\r\n    }\r\n\r\n    // if not open yet - check against initial zoom level\r\n    if (!this.pswp.opener.isOpen) {\r\n      currZoomLevel = currSlide.zoomLevels.initial;\r\n    }\r\n\r\n    if (currZoomLevel === this._lastUpdatedZoomLevel) {\r\n      return;\r\n    }\r\n    this._lastUpdatedZoomLevel = currZoomLevel;\r\n\r\n    const currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary;\r\n\r\n    // Initial and secondary zoom levels are almost equal\r\n    if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\r\n      // disable zoom\r\n      setZoomedIn(template, false);\r\n      template.classList.remove('pswp--zoom-allowed');\r\n      return;\r\n    }\r\n\r\n    template.classList.add('pswp--zoom-allowed');\r\n\r\n    const potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial\r\n      ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\r\n\r\n    setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\r\n\r\n    if (options.imageClickAction === 'zoom'\r\n        || options.imageClickAction === 'zoom-or-close') {\r\n      template.classList.add('pswp--click-to-zoom');\r\n    }\r\n  }\r\n}\r\n\r\nexport default UI;\r\n","import {\r\n  setTransform,\r\n  equalizePoints,\r\n  decodeImage,\r\n  toTransformString\r\n} from './util/util.js';\r\n\r\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\r\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\r\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\r\n\r\n// some browsers do not paint\r\n// elements which opacity is set to 0,\r\n// since we need to pre-render elements for the animation -\r\n// we set it to the minimum amount\r\nconst MIN_OPACITY = 0.003;\r\n\r\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\r\nclass Opener {\r\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\r\n  constructor(pswp) {\r\n    this.pswp = pswp;\r\n    this.isClosed = true;\r\n    this._prepareOpen = this._prepareOpen.bind(this);\r\n\r\n    /** @type {false | Bounds} */\r\n    this._thumbBounds = undefined;\r\n\r\n    // Override initial zoom and pan position\r\n    pswp.on('firstZoomPan', this._prepareOpen);\r\n  }\r\n\r\n  open() {\r\n    this._prepareOpen();\r\n    this._start();\r\n  }\r\n\r\n  close() {\r\n    if (this.isClosed || this.isClosing || this.isOpening) {\r\n      // if we close during opening animation\r\n      // for now do nothing,\r\n      // browsers aren't good at changing the direction of the CSS transition\r\n      return false;\r\n    }\r\n\r\n    const slide = this.pswp.currSlide;\r\n\r\n    this.isOpen = false;\r\n    this.isOpening = false;\r\n    this.isClosing = true;\r\n    this._duration = this.pswp.options.hideAnimationDuration;\r\n\r\n    if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._applyStartProps();\r\n    setTimeout(() => {\r\n      this._start();\r\n    }, this._croppedZoom ? 30 : 0);\r\n\r\n    return true;\r\n  }\r\n\r\n  _prepareOpen() {\r\n    this.pswp.off('firstZoomPan', this._prepareOpen);\r\n    if (!this.isOpening) {\r\n      const slide = this.pswp.currSlide;\r\n      this.isOpening = true;\r\n      this.isClosing = false;\r\n      this._duration = this.pswp.options.showAnimationDuration;\r\n      if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\r\n        this._duration = 0;\r\n      }\r\n      this._applyStartProps();\r\n    }\r\n  }\r\n\r\n  _applyStartProps() {\r\n    const { pswp } = this;\r\n    const slide = this.pswp.currSlide;\r\n    const { options } = pswp;\r\n\r\n    if (options.showHideAnimationType === 'fade') {\r\n      options.showHideOpacity = true;\r\n      this._thumbBounds = false;\r\n    } else if (options.showHideAnimationType === 'none') {\r\n      options.showHideOpacity = false;\r\n      this._duration = 0;\r\n      this._thumbBounds = false;\r\n    } else if (this.isOpening && pswp._initialThumbBounds) {\r\n      // Use initial bounds if defined\r\n      this._thumbBounds = pswp._initialThumbBounds;\r\n    } else {\r\n      this._thumbBounds = this.pswp.getThumbBounds();\r\n    }\r\n\r\n    this._placeholder = slide.getPlaceholderElement();\r\n\r\n    pswp.animations.stopAll();\r\n\r\n    // Discard animations when duration is less than 50ms\r\n    this._useAnimation = (this._duration > 50);\r\n    this._animateZoom = Boolean(this._thumbBounds)\r\n                        && (slide.content && slide.content.usePlaceholder())\r\n                        && (!this.isClosing || !pswp.mainScroll.isShifted());\r\n    if (!this._animateZoom) {\r\n      this._animateRootOpacity = true;\r\n\r\n      if (this.isOpening) {\r\n        slide.zoomAndPanToInitial();\r\n        slide.applyCurrentZoomPan();\r\n      }\r\n    } else {\r\n      this._animateRootOpacity = options.showHideOpacity;\r\n    }\r\n    this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\r\n    this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\r\n\r\n    if (!this._useAnimation) {\r\n      this._duration = 0;\r\n      this._animateZoom = false;\r\n      this._animateBgOpacity = false;\r\n      this._animateRootOpacity = true;\r\n      if (this.isOpening) {\r\n        pswp.element.style.opacity = String(MIN_OPACITY);\r\n        pswp.applyBgOpacity(1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\r\n      // Properties are used when animation from cropped thumbnail\r\n      this._croppedZoom = true;\r\n      this._cropContainer1 = this.pswp.container;\r\n      this._cropContainer2 = this.pswp.currSlide.holderElement;\r\n\r\n      pswp.container.style.overflow = 'hidden';\r\n      pswp.container.style.width = pswp.viewportSize.x + 'px';\r\n    } else {\r\n      this._croppedZoom = false;\r\n    }\r\n\r\n    if (this.isOpening) {\r\n      // Apply styles before opening transition\r\n      if (this._animateRootOpacity) {\r\n        pswp.element.style.opacity = String(MIN_OPACITY);\r\n        pswp.applyBgOpacity(1);\r\n      } else {\r\n        if (this._animateBgOpacity) {\r\n          pswp.bg.style.opacity = String(MIN_OPACITY);\r\n        }\r\n        pswp.element.style.opacity = '1';\r\n      }\r\n\r\n      if (this._animateZoom) {\r\n        this._setClosedStateZoomPan();\r\n        if (this._placeholder) {\r\n          // tell browser that we plan to animate the placeholder\r\n          this._placeholder.style.willChange = 'transform';\r\n\r\n          // hide placeholder to allow hiding of\r\n          // elements that overlap it (such as icons over the thumbnail)\r\n          this._placeholder.style.opacity = String(MIN_OPACITY);\r\n        }\r\n      }\r\n    } else if (this.isClosing) {\r\n      // hide nearby slides to make sure that\r\n      // they are not painted during the transition\r\n      pswp.mainScroll.itemHolders[0].el.style.display = 'none';\r\n      pswp.mainScroll.itemHolders[2].el.style.display = 'none';\r\n\r\n      if (this._croppedZoom) {\r\n        if (pswp.mainScroll.x !== 0) {\r\n          // shift the main scroller to zero position\r\n          pswp.mainScroll.resetPosition();\r\n          pswp.mainScroll.resize();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _start() {\r\n    if (this.isOpening\r\n        && this._useAnimation\r\n        && this._placeholder\r\n        && this._placeholder.tagName === 'IMG') {\r\n      // To ensure smooth animation\r\n      // we wait till the current slide image placeholder is decoded,\r\n      // but no longer than 250ms,\r\n      // and no shorter than 50ms\r\n      // (just using requestanimationframe is not enough in Firefox,\r\n      // for some reason)\r\n      new Promise((resolve) => {\r\n        let decoded = false;\r\n        let isDelaying = true;\r\n        decodeImage(/** @type {HTMLImageElement} */ (this._placeholder)).finally(() => {\r\n          decoded = true;\r\n          if (!isDelaying) {\r\n            resolve();\r\n          }\r\n        });\r\n        setTimeout(() => {\r\n          isDelaying = false;\r\n          if (decoded) {\r\n            resolve();\r\n          }\r\n        }, 50);\r\n        setTimeout(resolve, 250);\r\n      }).finally(() => this._initiate());\r\n    } else {\r\n      this._initiate();\r\n    }\r\n  }\r\n\r\n  _initiate() {\r\n    this.pswp.element.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\r\n\r\n    this.pswp.dispatch(\r\n      this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'\r\n    );\r\n\r\n    // legacy event\r\n    this.pswp.dispatch(\r\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\r\n      ('initialZoom' + (this.isOpening ? 'In' : 'Out'))\r\n    );\r\n\r\n    this.pswp.element.classList[this.isOpening ? 'add' : 'remove']('pswp--ui-visible');\r\n\r\n    if (this.isOpening) {\r\n      if (this._placeholder) {\r\n        // unhide the placeholder\r\n        this._placeholder.style.opacity = '1';\r\n      }\r\n      this._animateToOpenState();\r\n    } else if (this.isClosing) {\r\n      this._animateToClosedState();\r\n    }\r\n\r\n    if (!this._useAnimation) {\r\n      this._onAnimationComplete();\r\n    }\r\n  }\r\n\r\n  _onAnimationComplete() {\r\n    const { pswp } = this;\r\n    this.isOpen = this.isOpening;\r\n    this.isClosed = this.isClosing;\r\n    this.isOpening = false;\r\n    this.isClosing = false;\r\n\r\n    pswp.dispatch(\r\n      this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'\r\n    );\r\n\r\n    // legacy event\r\n    pswp.dispatch(\r\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\r\n      ('initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'))\r\n    );\r\n\r\n    if (this.isClosed) {\r\n      pswp.destroy();\r\n    } else if (this.isOpen) {\r\n      if (this._animateZoom) {\r\n        pswp.container.style.overflow = 'visible';\r\n        pswp.container.style.width = '100%';\r\n      }\r\n      pswp.currSlide.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  _animateToOpenState() {\r\n    const { pswp } = this;\r\n    if (this._animateZoom) {\r\n      if (this._croppedZoom) {\r\n        this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\r\n        this._animateTo(this._cropContainer2, 'transform', 'none');\r\n      }\r\n\r\n      pswp.currSlide.zoomAndPanToInitial();\r\n      this._animateTo(\r\n        pswp.currSlide.container,\r\n        'transform',\r\n        pswp.currSlide.getCurrentTransform()\r\n      );\r\n    }\r\n\r\n    if (this._animateBgOpacity) {\r\n      this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\r\n    }\r\n\r\n    if (this._animateRootOpacity) {\r\n      this._animateTo(pswp.element, 'opacity', '1');\r\n    }\r\n  }\r\n\r\n  _animateToClosedState() {\r\n    const { pswp } = this;\r\n\r\n    if (this._animateZoom) {\r\n      this._setClosedStateZoomPan(true);\r\n    }\r\n\r\n    if (this._animateBgOpacity\r\n        && pswp.bgOpacity > 0.01) { // do not animate opacity if it's already at 0\r\n      this._animateTo(pswp.bg, 'opacity', '0');\r\n    }\r\n\r\n    if (this._animateRootOpacity) {\r\n      this._animateTo(pswp.element, 'opacity', '0');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {boolean=} animate\r\n   */\r\n  _setClosedStateZoomPan(animate) {\r\n    if (!this._thumbBounds) return;\r\n\r\n    const { pswp } = this;\r\n    const { innerRect } = this._thumbBounds;\r\n    const { currSlide, viewportSize } = pswp;\r\n\r\n    if (this._croppedZoom) {\r\n      const containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\r\n      const containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\r\n      const containerTwoPanX = viewportSize.x - innerRect.w;\r\n      const containerTwoPanY = viewportSize.y - innerRect.h;\r\n\r\n\r\n      if (animate) {\r\n        this._animateTo(\r\n          this._cropContainer1,\r\n          'transform',\r\n          toTransformString(containerOnePanX, containerOnePanY)\r\n        );\r\n\r\n        this._animateTo(\r\n          this._cropContainer2,\r\n          'transform',\r\n          toTransformString(containerTwoPanX, containerTwoPanY)\r\n        );\r\n      } else {\r\n        setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\r\n        setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\r\n      }\r\n    }\r\n\r\n    equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\r\n    currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\r\n\r\n    if (animate) {\r\n      this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\r\n    } else {\r\n      currSlide.applyCurrentZoomPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} target\r\n   * @param {'transform' | 'opacity'} prop\r\n   * @param {string} propValue\r\n   */\r\n  _animateTo(target, prop, propValue) {\r\n    if (!this._duration) {\r\n      target.style[prop] = propValue;\r\n      return;\r\n    }\r\n\r\n    const { animations } = this.pswp;\r\n    /** @type {AnimationProps} */\r\n    const animProps = {\r\n      duration: this._duration,\r\n      easing: this.pswp.options.easing,\r\n      onComplete: () => {\r\n        if (!animations.activeAnimations.length) {\r\n          this._onAnimationComplete();\r\n        }\r\n      },\r\n      target,\r\n    };\r\n    animProps[prop] = propValue;\r\n    animations.startTransition(animProps);\r\n  }\r\n}\r\n\r\nexport default Opener;\r\n","import {\r\n  createElement,\r\n  equalizePoints,\r\n  pointsEqual,\r\n  clamp,\r\n} from './util/util.js';\r\n\r\nimport DOMEvents from './util/dom-events.js';\r\nimport Slide from './slide/slide.js';\r\nimport Gestures from './gestures/gestures.js';\r\nimport MainScroll from './main-scroll.js';\r\n\r\nimport Keyboard from './keyboard.js';\r\nimport Animations from './util/animations.js';\r\nimport ScrollWheel from './scroll-wheel.js';\r\nimport UI from './ui/ui.js';\r\nimport { getViewportSize } from './util/viewport-size.js';\r\nimport { getThumbBounds } from './slide/get-thumb-bounds.js';\r\nimport PhotoSwipeBase from './core/base.js';\r\nimport Opener from './opener.js';\r\nimport ContentLoader from './slide/loader.js';\r\n\r\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\r\n\r\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\r\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\r\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\r\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\r\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\r\n/**\r\n * @template T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\r\n/**\r\n * @template T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\r\n\r\n/** @typedef {{ x?: number; y?: number; id?: string | number }} Point */\r\n/** @typedef {{ x?: number; y?: number }} Size */\r\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\r\n/** @typedef {SlideData[]} DataSourceArray */\r\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\r\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\r\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\r\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\r\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\r\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\r\n\r\n/**\r\n * @typedef {Object} PhotoSwipeOptions https://photoswipe.com/options/\r\n *\r\n * @prop {DataSource=} dataSource\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number=} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number=} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean=} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean=} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean=} wheelToZoom\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean=} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean=} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding=} padding\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Size, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} [hideAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} [showAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} [zoomAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string=} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean=} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean=} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean=} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean=} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} [imageClickAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [bgClickAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [tapAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [doubleTapAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number=} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string=} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipe) => { x: number; y: number }} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string=} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]=} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string=} mainClass\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement=} appendToEl\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number=} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string=} closeTitle\r\n * Translating\r\n *\r\n * @prop {string=} zoomTitle\r\n * Translating\r\n *\r\n * @prop {string=} arrowPrevTitle\r\n * Translating\r\n *\r\n * @prop {string=} arrowNextTitle\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number=} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean=} arrowPrev\r\n * @prop {boolean=} arrowNext\r\n * @prop {boolean=} zoom\r\n * @prop {boolean=} close\r\n * @prop {boolean=} counter\r\n *\r\n * @prop {string=} arrowPrevSVG\r\n * @prop {string=} arrowNextSVG\r\n * @prop {string=} zoomSVG\r\n * @prop {string=} closeSVG\r\n * @prop {string=} counterSVG\r\n *\r\n * @prop {string=} arrowPrevTitle\r\n * @prop {string=} arrowNextTitle\r\n * @prop {string=} zoomTitle\r\n * @prop {string=} closeTitle\r\n * @prop {string=} counterTitle\r\n *\r\n * @prop {ZoomLevelOption=} initialZoomLevel\r\n * @prop {ZoomLevelOption=} secondaryZoomLevel\r\n * @prop {ZoomLevelOption=} maxZoomLevel\r\n *\r\n * @prop {boolean=} mouseMovePan\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean=} showHideOpacity\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean=} preloadFirstSlide\r\n * @prop {string=} gallery\r\n * @prop {string=} gallerySelector\r\n * @prop {string=} children\r\n * @prop {string=} childSelector\r\n * @prop {string | false} [thumbSelector]\r\n */\r\n\r\n/** @type {PhotoSwipeOptions} */\r\nconst defaultOptions = {\r\n  allowPanToNext: true,\r\n  spacing: 0.1,\r\n  loop: true,\r\n  pinchToClose: true,\r\n  closeOnVerticalDrag: true,\r\n  hideAnimationDuration: 333,\r\n  showAnimationDuration: 333,\r\n  zoomAnimationDuration: 333,\r\n  escKey: true,\r\n  arrowKeys: true,\r\n  returnFocus: true,\r\n  maxWidthToAnimate: 4000,\r\n  clickToCloseNonZoomable: true,\r\n  imageClickAction: 'zoom-or-close',\r\n  bgClickAction: 'close',\r\n  tapAction: 'toggle-controls',\r\n  doubleTapAction: 'zoom',\r\n  indexIndicatorSep: ' / ',\r\n  preloaderDelay: 2000,\r\n  bgOpacity: 0.8,\r\n\r\n  index: 0,\r\n  errorMsg: 'The image cannot be loaded',\r\n  preload: [1, 2],\r\n  easing: 'cubic-bezier(.4,0,.22,1)'\r\n};\r\n\r\n/**\r\n * PhotoSwipe Core\r\n */\r\nclass PhotoSwipe extends PhotoSwipeBase {\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    this._prepareOptions(options);\r\n\r\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {{ x?: number; y?: number }}\r\n     */\r\n    this.offset = {};\r\n\r\n    /**\r\n     * @type {{ x?: number; y?: number }}\r\n     * @private\r\n     */\r\n    this._prevViewportSize = {};\r\n\r\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {{ x?: number; y?: number }}\r\n     */\r\n    this.viewportSize = {};\r\n\r\n    /**\r\n     * background (backdrop) opacity\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.bgOpacity = 1;\r\n\r\n    /** @type {HTMLDivElement} */\r\n    this.topBar = undefined;\r\n\r\n    this.events = new DOMEvents();\r\n\r\n    /** @type {Animations} */\r\n    this.animations = new Animations();\r\n\r\n    this.mainScroll = new MainScroll(this);\r\n    this.gestures = new Gestures(this);\r\n    this.opener = new Opener(this);\r\n    this.keyboard = new Keyboard(this);\r\n    this.contentLoader = new ContentLoader(this);\r\n  }\r\n\r\n  init() {\r\n    if (this.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isOpen = true;\r\n    this.dispatch('init'); // legacy\r\n    this.dispatch('beforeOpen');\r\n\r\n    this._createMainStructure();\r\n\r\n    // add classes to the root element of PhotoSwipe\r\n    let rootClasses = 'pswp--open';\r\n    if (this.gestures.supportsTouch) {\r\n      rootClasses += ' pswp--touch';\r\n    }\r\n    if (this.options.mainClass) {\r\n      rootClasses += ' ' + this.options.mainClass;\r\n    }\r\n    this.element.className += ' ' + rootClasses;\r\n\r\n    this.currIndex = this.options.index || 0;\r\n    this.potentialIndex = this.currIndex;\r\n    this.dispatch('firstUpdate'); // starting index can be modified here\r\n\r\n    // initialize scroll wheel handler to block the scroll\r\n    this.scrollWheel = new ScrollWheel(this);\r\n\r\n    // sanitize index\r\n    if (Number.isNaN(this.currIndex)\r\n        || this.currIndex < 0\r\n        || this.currIndex >= this.getNumItems()) {\r\n      this.currIndex = 0;\r\n    }\r\n\r\n    if (!this.gestures.supportsTouch) {\r\n      // enable mouse features if no touch support detected\r\n      this.mouseDetected();\r\n    }\r\n\r\n    // causes forced synchronous layout\r\n    this.updateSize();\r\n\r\n    this.offset.y = window.pageYOffset;\r\n\r\n    this._initialItemData = this.getItemData(this.currIndex);\r\n    this.dispatch('gettingData', {\r\n      index: this.currIndex,\r\n      data: this._initialItemData,\r\n      slide: undefined\r\n    });\r\n\r\n    // *Layout* - calculate size and position of elements here\r\n    this._initialThumbBounds = this.getThumbBounds();\r\n    this.dispatch('initialLayout');\r\n\r\n    this.on('openingAnimationEnd', () => {\r\n      this.mainScroll.itemHolders[0].el.style.display = 'block';\r\n      this.mainScroll.itemHolders[2].el.style.display = 'block';\r\n\r\n      // Add content to the previous and next slide\r\n      this.setContent(this.mainScroll.itemHolders[0], this.currIndex - 1);\r\n      this.setContent(this.mainScroll.itemHolders[2], this.currIndex + 1);\r\n\r\n      this.appendHeavy();\r\n\r\n      this.contentLoader.updateLazy();\r\n\r\n      this.events.add(window, 'resize', this._handlePageResize.bind(this));\r\n      this.events.add(window, 'scroll', this._updatePageScrollOffset.bind(this));\r\n      this.dispatch('bindEvents');\r\n    });\r\n\r\n    // set content for center slide (first time)\r\n    this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\r\n    this.dispatch('change');\r\n\r\n    this.opener.open();\r\n\r\n    this.dispatch('afterInit');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get looped slide index\r\n   * (for example, -1 will return the last slide)\r\n   *\r\n   * @param {number} index\r\n   */\r\n  getLoopedIndex(index) {\r\n    const numSlides = this.getNumItems();\r\n\r\n    if (this.options.loop) {\r\n      if (index > numSlides - 1) {\r\n        index -= numSlides;\r\n      }\r\n\r\n      if (index < 0) {\r\n        index += numSlides;\r\n      }\r\n    }\r\n\r\n    index = clamp(index, 0, numSlides - 1);\r\n\r\n    return index;\r\n  }\r\n\r\n  appendHeavy() {\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      if (itemHolder.slide) {\r\n        itemHolder.slide.appendHeavy();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change the slide\r\n   * @param {number} index New index\r\n   */\r\n  goTo(index) {\r\n    this.mainScroll.moveIndexBy(\r\n      this.getLoopedIndex(index) - this.potentialIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Go to the next slide.\r\n   */\r\n  next() {\r\n    this.goTo(this.potentialIndex + 1);\r\n  }\r\n\r\n  /**\r\n   * Go to the previous slide.\r\n   */\r\n  prev() {\r\n    this.goTo(this.potentialIndex - 1);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js zoomTo\r\n   *\r\n   * @param {Parameters<Slide['zoomTo']>} args\r\n   */\r\n  zoomTo(...args) {\r\n    this.currSlide.zoomTo(...args);\r\n  }\r\n\r\n  /**\r\n   * @see slide/slide.js toggleZoom\r\n   */\r\n  toggleZoom() {\r\n    this.currSlide.toggleZoom();\r\n  }\r\n\r\n  /**\r\n   * Close the gallery.\r\n   * After closing transition ends - destroy it\r\n   */\r\n  close() {\r\n    if (!this.opener.isOpen || this.isDestroying) {\r\n      return;\r\n    }\r\n\r\n    this.isDestroying = true;\r\n\r\n    this.dispatch('close');\r\n\r\n    this.events.removeAll();\r\n    this.opener.close();\r\n  }\r\n\r\n  /**\r\n   * Destroys the gallery:\r\n   * - instantly closes the gallery\r\n   * - unbinds events,\r\n   * - cleans intervals and timeouts\r\n   * - removes elements from DOM\r\n   */\r\n  destroy() {\r\n    if (!this.isDestroying) {\r\n      this.options.showHideAnimationType = 'none';\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    this.dispatch('destroy');\r\n\r\n    this.listeners = null;\r\n\r\n    this.scrollWrap.ontouchmove = null;\r\n    this.scrollWrap.ontouchend = null;\r\n\r\n    this.element.remove();\r\n\r\n    this.mainScroll.itemHolders.forEach((itemHolder) => {\r\n      if (itemHolder.slide) {\r\n        itemHolder.slide.destroy();\r\n      }\r\n    });\r\n\r\n    this.contentLoader.destroy();\r\n    this.events.removeAll();\r\n  }\r\n\r\n  /**\r\n   * Refresh/reload content of a slide by its index\r\n   *\r\n   * @param {number} slideIndex\r\n   */\r\n  refreshSlideContent(slideIndex) {\r\n    this.contentLoader.removeByIndex(slideIndex);\r\n    this.mainScroll.itemHolders.forEach((itemHolder, i) => {\r\n      let potentialHolderIndex = this.currSlide.index - 1 + i;\r\n      if (this.canLoop()) {\r\n        potentialHolderIndex = this.getLoopedIndex(potentialHolderIndex);\r\n      }\r\n      if (potentialHolderIndex === slideIndex) {\r\n        // set the new slide content\r\n        this.setContent(itemHolder, slideIndex, true);\r\n\r\n        // activate the new slide if it's current\r\n        if (i === 1) {\r\n          /** @type {Slide} */\r\n          this.currSlide = itemHolder.slide;\r\n          itemHolder.slide.setIsActive(true);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.dispatch('change');\r\n  }\r\n\r\n\r\n  /**\r\n   * Set slide content\r\n   *\r\n   * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n   * @param {number} index Slide index\r\n   * @param {boolean=} force If content should be set even if index wasn't changed\r\n   */\r\n  setContent(holder, index, force) {\r\n    if (this.canLoop()) {\r\n      index = this.getLoopedIndex(index);\r\n    }\r\n\r\n    if (holder.slide) {\r\n      if (holder.slide.index === index && !force) {\r\n        // exit if holder already contains this slide\r\n        // this could be common when just three slides are used\r\n        return;\r\n      }\r\n\r\n      // destroy previous slide\r\n      holder.slide.destroy();\r\n      holder.slide = null;\r\n    }\r\n\r\n    // exit if no loop and index is out of bounds\r\n    if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\r\n      return;\r\n    }\r\n\r\n    const itemData = this.getItemData(index);\r\n    holder.slide = new Slide(itemData, index, this);\r\n\r\n    // set current slide\r\n    if (index === this.currIndex) {\r\n      this.currSlide = holder.slide;\r\n    }\r\n\r\n    holder.slide.append(holder.el);\r\n  }\r\n\r\n  getViewportCenterPoint() {\r\n    return {\r\n      x: this.viewportSize.x / 2,\r\n      y: this.viewportSize.y / 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Update size of all elements.\r\n   * Executed on init and on page resize.\r\n   *\r\n   * @param {boolean=} force Update size even if size of viewport was not changed.\r\n   */\r\n  updateSize(force) {\r\n    // let item;\r\n    // let itemIndex;\r\n\r\n    if (this.isDestroying) {\r\n      // exit if PhotoSwipe is closed or closing\r\n      // (to avoid errors, as resize event might be delayed)\r\n      return;\r\n    }\r\n\r\n    //const newWidth = this.scrollWrap.clientWidth;\r\n    //const newHeight = this.scrollWrap.clientHeight;\r\n\r\n    const newViewportSize = getViewportSize(this.options, this);\r\n\r\n    if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\r\n      // Exit if dimensions were not changed\r\n      return;\r\n    }\r\n\r\n    //this._prevViewportSize.x = newWidth;\r\n    //this._prevViewportSize.y = newHeight;\r\n    equalizePoints(this._prevViewportSize, newViewportSize);\r\n\r\n    this.dispatch('beforeResize');\r\n\r\n    equalizePoints(this.viewportSize, this._prevViewportSize);\r\n\r\n    this._updatePageScrollOffset();\r\n\r\n    this.dispatch('viewportSize');\r\n\r\n    // Resize slides only after opener animation is finished\r\n    // and don't re-calculate size on inital size update\r\n    this.mainScroll.resize(this.opener.isOpen);\r\n\r\n    if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\r\n      this.mouseDetected();\r\n    }\r\n\r\n    this.dispatch('resize');\r\n  }\r\n\r\n  /**\r\n   * @param {number} opacity\r\n   */\r\n  applyBgOpacity(opacity) {\r\n    this.bgOpacity = Math.max(opacity, 0);\r\n    this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\r\n  }\r\n\r\n  /**\r\n   * Whether mouse is detected\r\n   */\r\n  mouseDetected() {\r\n    if (!this.hasMouse) {\r\n      this.hasMouse = true;\r\n      this.element.classList.add('pswp--has_mouse');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page resize event handler\r\n   *\r\n   * @private\r\n   */\r\n  _handlePageResize() {\r\n    this.updateSize();\r\n\r\n    // In iOS webview, if element size depends on document size,\r\n    // it'll be measured incorrectly in resize event\r\n    //\r\n    // https://bugs.webkit.org/show_bug.cgi?id=170595\r\n    // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\r\n    if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\r\n      setTimeout(() => {\r\n        this.updateSize();\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Page scroll offset is used\r\n   * to get correct coordinates\r\n   * relative to PhotoSwipe viewport.\r\n   *\r\n   * @private\r\n   */\r\n  _updatePageScrollOffset() {\r\n    this.setScrollOffset(0, window.pageYOffset);\r\n  }\r\n\r\n  /**\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  setScrollOffset(x, y) {\r\n    this.offset.x = x;\r\n    this.offset.y = y;\r\n    this.dispatch('updateScrollOffset');\r\n  }\r\n\r\n  /**\r\n   * Create main HTML structure of PhotoSwipe,\r\n   * and add it to DOM\r\n   *\r\n   * @private\r\n   */\r\n  _createMainStructure() {\r\n    // root DOM element of PhotoSwipe (.pswp)\r\n    this.element = createElement('pswp');\r\n    this.element.setAttribute('tabindex', '-1');\r\n    this.element.setAttribute('role', 'dialog');\r\n\r\n    // template is legacy prop\r\n    this.template = this.element;\r\n\r\n    // Background is added as a separate element,\r\n    // as animating opacity is faster than animating rgba()\r\n    this.bg = createElement('pswp__bg', false, this.element);\r\n    this.scrollWrap = createElement('pswp__scroll-wrap', false, this.element);\r\n    this.container = createElement('pswp__container', false, this.scrollWrap);\r\n\r\n    this.mainScroll.appendHolders();\r\n\r\n    this.ui = new UI(this);\r\n    this.ui.init();\r\n\r\n    // append to DOM\r\n    (this.options.appendToEl || document.body).appendChild(this.element);\r\n  }\r\n\r\n\r\n  /**\r\n   * Get position and dimensions of small thumbnail\r\n   *   {x:,y:,w:}\r\n   *\r\n   * Height is optional (calculated based on the large image)\r\n   */\r\n  getThumbBounds() {\r\n    return getThumbBounds(\r\n      this.currIndex,\r\n      this.currSlide ? this.currSlide.data : this._initialItemData,\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * If the PhotoSwipe can have continious loop\r\n   * @returns Boolean\r\n   */\r\n  canLoop() {\r\n    return (this.options.loop && this.getNumItems() > 2);\r\n  }\r\n\r\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   * @private\r\n   */\r\n  _prepareOptions(options) {\r\n    if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\r\n      options.showHideAnimationType = 'none';\r\n      options.zoomAnimationDuration = 0;\r\n    }\r\n\r\n    /** @type {PhotoSwipeOptions}*/\r\n    this.options = {\r\n      ...defaultOptions,\r\n      ...options\r\n    };\r\n  }\r\n}\r\n\r\nexport default PhotoSwipe;\r\n","/** @typedef {import('./slide.js').SlideData} SlideData */\r\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\r\n\r\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n */\r\nfunction getBoundsByElement(el) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n  return {\r\n    x: thumbAreaRect.left,\r\n    y: thumbAreaRect.top,\r\n    w: thumbAreaRect.width\r\n  };\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n */\r\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\r\n  const thumbAreaRect = el.getBoundingClientRect();\r\n\r\n  // fill image into the area\r\n  // (do they same as object-fit:cover does to retrieve coordinates)\r\n  const hRatio = thumbAreaRect.width / imageWidth;\r\n  const vRatio = thumbAreaRect.height / imageHeight;\r\n  const fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\r\n\r\n  const offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\r\n  const offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\r\n\r\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\r\n  const bounds = {\r\n    x: thumbAreaRect.left + offsetX,\r\n    y: thumbAreaRect.top + offsetY,\r\n    w: imageWidth * fillZoomLevel\r\n  };\r\n\r\n  // Coordinates of inner crop area\r\n  // relative to the image\r\n  bounds.innerRect = {\r\n    w: thumbAreaRect.width,\r\n    h: thumbAreaRect.height,\r\n    x: offsetX,\r\n    y: offsetY\r\n  };\r\n\r\n  return bounds;\r\n}\r\n\r\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\r\nexport function getThumbBounds(index, itemData, instance) {\r\n  // legacy event, before filters were introduced\r\n  const event = instance.dispatch('thumbBounds', {\r\n    index,\r\n    itemData,\r\n    instance\r\n  });\r\n  // @ts-expect-error\r\n  if (event.thumbBounds) {\r\n    // @ts-expect-error\r\n    return event.thumbBounds;\r\n  }\r\n\r\n  const { element } = itemData;\r\n  let thumbBounds;\r\n  /** @type {HTMLElement} */\r\n  let thumbnail;\r\n\r\n  if (element && instance.options.thumbSelector !== false) {\r\n    const thumbSelector = instance.options.thumbSelector || 'img';\r\n    thumbnail = element.matches(thumbSelector)\r\n      ? element : element.querySelector(thumbSelector);\r\n  }\r\n\r\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\r\n\r\n  if (thumbnail) {\r\n    if (!itemData.thumbCropped) {\r\n      thumbBounds = getBoundsByElement(thumbnail);\r\n    } else {\r\n      thumbBounds = getCroppedBoundsByElement(\r\n        thumbnail,\r\n        itemData.width || itemData.w,\r\n        itemData.height || itemData.h\r\n      );\r\n    }\r\n  }\r\n\r\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\r\n}\r\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\n// @ts-ignore\nimport PhotoSwipeLightbox from 'photoswipe/lightbox';\nimport pswpModule from 'photoswipe';\n\napp.initializers.add('sycho/flarum-photoswipe', () => {\n  let components: any[] = [CommentPost.prototype];\n\n  if ('ianm-synopsis' in flarum.extensions) {\n    components.push(DiscussionListItem.prototype);\n  }\n\n  components.forEach((prototype) => {\n    extend(prototype, 'oninit', function (this: any) {\n      const dataId = this.attrs.post?.id() || this.attrs.discussion?.id();\n      const selectors = [\n        // A Photoswiper instance for images per post, per excerpt, and per article.\n        `[data-id=\"${dataId}\"] .Post-body:not(:has(.swiper)), [data-id=\"${dataId}\"] .item-excerpt:not(:has(.swiper)), .FlarumBlog-Article .Post-body:not(:has(.swiper))`,\n      ];\n      // A Photoswiper instance for images per gallery (per post, per excerpt, and per article).\n      if ('datitisev-post-galleries' in flarum.extensions) {\n        selectors.push(\n          `[data-id=\"${dataId}\"] .Post-body .swiper, [data-id=\"${dataId}\"] .item-excerpt .swiper, .FlarumBlog-Article .Post-body .swiper`\n        );\n      }\n\n      this.lightbox = new PhotoSwipeLightbox({\n        gallery: selectors.join(', '),\n        children: 'a[data-pswp]',\n        pswpModule,\n      });\n    });\n\n    extend(prototype, ['onupdate', 'oncreate'], function () {\n      // @ts-ignore\n      this.$('a[data-pswp] > img').each((index, el: HTMLImageElement) => {\n        const $el = $(el);\n        const $a = $el.parent('a');\n        const setDimensions = () => {\n          $a.attr('data-pswp-width', el.naturalWidth);\n          $a.attr('data-pswp-height', el.naturalHeight);\n        };\n\n        if (el.complete && el.naturalWidth) {\n          setDimensions();\n          this.lightbox.init();\n        } else {\n          el.onload = () => {\n            setDimensions();\n            this.lightbox.init();\n\n            if (this.lightbox.pswp) this.lightbox.pswp.refreshSlideContent(index);\n          };\n        }\n      });\n\n      // Timeout to make sure galleries were initialized\n      setTimeout(() => {\n        if (this.galleries) {\n          this.lightbox.on('change', () => {\n            // Match the swiper current slide with the photoswipe current slide.\n            const gallery = this.galleries.find((swiper: any) => this.lightbox.options.dataSource.gallery === swiper.$el[0]);\n            gallery?.slideTo(this.lightbox.pswp.currIndex, 0, false);\n\n            this.galleries\n              .filter((swiper: any) => this.lightbox.options.dataSource.gallery !== swiper.$el[0])\n              .map((swiper: any) => {\n                swiper.tmpCurrIndex = swiper.currIndex;\n                swiper.slideTo(this.lightbox.pswp.currIndex, 0, false);\n                return swiper;\n              })\n              .forEach((swiper: any) => swiper.slideTo(swiper.tmpCurrIndex, 0, false));\n          });\n        }\n      }, 100);\n    });\n\n    extend(prototype, 'onremove', function () {\n      this.lightbox.destroy();\n      this.lightbox = null;\n    });\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","createElement","className","tagName","appendToEl","el","document","appendChild","setWidthHeight","w","h","style","width","height","LOAD_STATE","getElementsFromOption","option","legacySelector","parent","elements","Element","NodeList","Array","isArray","from","selector","querySelectorAll","isSafari","navigator","vendor","match","PhotoSwipeEvent","type","details","this","assign","preventDefault","defaultPrevented","Eventable","_listeners","_filters","pswp","undefined","options","addFilter","name","fn","priority","push","sort","f1","f2","removeFilter","filter","applyFilters","args","forEach","apply","on","off","listener","dispatch","event","Placeholder","imageSrc","container","element","decoding","alt","src","setAttribute","setDisplayedSize","scale","propValue","transformOrigin","transform","destroy","parentNode","remove","Content","itemData","instance","index","data","displayedImageWidth","displayedImageHeight","Number","isAttached","hasSlide","state","content","removePlaceholder","placeholder","keepPlaceholder","setTimeout","load","isLazy","reload","slide","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isFirstSlide","isImageContent","loadImage","innerHTML","html","updateContentSize","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","setSlide","isActive","heavyAppended","append","displayError","isError","isLoading","isInitialSizeUpdate","isZoomable","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","lazyLoad","errorMsgEl","innerText","errorMsg","supportsDecode","isDecoding","decode","appendImage","activate","deactivate","parsePaddingOption","viewportSize","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","ZoomLevel","update","maxWidth","maxHeight","panAreaSize","elementSize","x","y","hRatio","vRatio","fit","Math","min","fill","vFill","initial","_getInitial","secondary","_getSecondary","max","_getMax","zoomLevels","slideData","_parseZoomLevelOption","optionPrefix","optionName","optionValue","currZoomLevel","lazyLoadData","createContentFromData","getViewportSizeFn","newViewportSize","documentElement","clientWidth","window","innerHeight","getViewportSize","getPanAreaSize","zoomLevel","ceil","PhotoSwipeLightbox","_uid","init","onThumbnailsClick","gallery","gallerySelector","galleryElement","addEventListener","e","which","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","onLine","initialPoint","clientX","clientY","clickedIndex","getClickedIndex","dataSource","currentTarget","loadAndOpen","getClickedIndexFn","clickedTarget","target","clickedChildIndex","children","childSelector","findIndex","child","contains","initialPointerPos","shouldOpen","preload","promiseArray","pswpModuleType","pswpModule","goTo","Promise","resolve","Error","openPromise","preloadFirstSlide","_preloadedContent","getItemData","lazyLoadSlide","uid","all","then","iterableModules","mainModule","_openPhotoswipe","keys","contentLoader","addToCache","removeEventListener","getNumItems","numItems","length","items","_getGalleryDOMElements","dataSourceItem","_domElementToItemData","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","_extends","i","arguments","source","_assertThisInitialized","self","ReferenceError","equalizePoints","p1","p2","id","roundPoint","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","toTransformString","setTransform","setTransitionStyle","duration","ease","transition","supportsPassive","DOMEvents","_pool","add","passive","_toggleListener","removeAll","poolItem","unbind","skipPool","methodName","split","eType","eventOptions","PanBounds","center","reset","_updateAxis","axis","elSize","correctPan","panOffset","Slide","currIndex","currentResolution","opener","isOpen","pan","getContentBySlide","bounds","prevDisplayedWidth","prevDisplayedHeight","setIsActive","holderElement","calculateSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","mainScroll","isShifted","resize","panTo","force","scaleMultiplier","sizeChanged","getPlaceholderElement","zoomTo","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","getCurrentTransform","onComplete","easing","toggleZoom","zoomAnimationDuration","point","getViewportCenterPoint","zoomFactor","panX","panY","isPannable","_applyZoomTransform","currSlide","zoom","newResolution","DragHandler","gestures","startPan","start","stopAll","change","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","_panOrMoveMainScroll","end","velocity","indexDiff","currentSlideVisibilityRatio","getCurrSlideX","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","onUpdate","pos","animationProgressRatio","floor","delta","newMainScrollX","moveTo","newPan","allowPanToNext","currSlideMainScrollX","mainScrollShiftDiff","isLeftToRight","isRightToLeft","potentialPan","customFriction","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_startZoomLevel","_wasOverFitZoomLevel","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","closest","TapHandler","click","originalEvent","targetClassList","classList","isImageClick","isBackgroundClick","_doClickOrTapAction","tap","doubleTap","actionName","actionFullName","clickToCloseNonZoomable","toggle","Gestures","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","drag","tapHandler","events","scrollWrap","_onClick","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","onPointerMove","onPointerUp","isMousePointer","pointerType","button","mouseDetected","_preventPointerEventBehaviour","_updatePoints","pointerDown","_clearTapTimer","isDragging","isZooming","_finishDrag","_updateStartPoints","_rafStopLoop","_rafRenderLoop","_calculateDragDirection","_intervalTime","Date","_velocityCalculated","_updateVelocity","_finishTap","_updatePrevPoints","raf","requestAnimationFrame","time","_getVelocity","indexOf","tapDelay","doubleTapAction","_tapTimer","clearTimeout","displacement","cancelAnimationFrame","pointerEvent","pointerIndex","ongoingPoiner","pointerId","splice","_convertEventPosToPoint","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MainScroll","slideWidth","itemHolders","resetPosition","resizeSlides","newSlideWidth","spacing","slideWidthChanged","itemHolder","_containerShiftIndex","_currPositionIndex","_prevPositionIndex","appendHolders","display","canBeSwiped","animate","velocityX","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","isMainScroll","updateCurrItem","currDiff","currDistance","positionDifference","tempHolder","diffAbs","shift","setContent","pop","unshift","updateLazy","dragging","newSlideIndexOffset","Keyboard","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","_wasFocused","focus","keydownAction","isForward","keyCode","escKey","arrowKeys","template","CSSAnimation","props","onFinish","_target","_onComplete","_onTransitionEnd","_helperTimeout","_finalizeAnimation","_finished","SpringEaser","initialVelocity","_dampingRatio","_naturalFrequency","_dampedFrequency","easeFrame","deltaPosition","deltaTime","coeff","naturalDumpingPow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","easer","prevTime","_raf","animationLoop","Animations","activeAnimations","_start","isSpring","animation","stop","isPanRunning","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","UIElement","elementHTML","isButton","toLowerCase","title","ariaLabel","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","addElementHTML","onInit","onClick","onclick","appendTo","topBar","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","setIndicatorVisibility","visible","updatePreloaderVisibility","preloaderDelay","ui","counterIndicator","counterElement","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","_lastUpdatedZoomLevel","isRegistered","uiElementsData","b","uiElementData","registerElement","_onZoomPanUpdate","elementData","isClosing","currZoomLevelDiff","imageClickAction","ContentLoader","limit","_cachedItems","loadSlideByIndex","getContentByIndex","removeByIndex","indexToRemove","item","find","PhotoSwipeBase","MIN_OPACITY","Opener","isClosed","_prepareOpen","_thumbBounds","open","isOpening","_duration","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","_croppedZoom","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","getThumbBounds","_placeholder","_useAnimation","_animateZoom","Boolean","_animateRootOpacity","_animateBgOpacity","_opacityElement","bg","opacity","innerRect","_cropContainer1","_cropContainer2","overflow","_setClosedStateZoomPan","willChange","img","decoded","isDelaying","reject","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","animProps","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_prepareOptions","_prevViewportSize","keyboard","isDestroying","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_initialItemData","_handlePageResize","_updatePageScrollOffset","next","prev","listeners","refreshSlideContent","slideIndex","potentialHolderIndex","holder","hasMouse","matchMedia","matches","test","userAgent","setScrollOffset","body","thumbBounds","thumbnail","thumbAreaRect","thumbSelector","imageWidth","imageHeight","getBoundingClientRect","fillZoomLevel","offsetX","offsetY","left","top","getCroppedBoundsByElement","app","components","CommentPost","extensions","DiscussionListItem","extend","dataId","attrs","post","discussion","selectors","lightbox","$","each","$a","setDimensions","attr","naturalWidth","naturalHeight","galleries","swiper","$el","slideTo","map","tmpCurrIndex"],"sourceRoot":""}